[{"path":"https://alphaprime7.github.io/normfluodbf/articles/highlights.html","id":"why-highlights","dir":"Articles","previous_headings":"","what":"🔥 Why Highlights?","title":"highlights","text":"Sports events filled highlights seldom intellectuals like take time reel work find way document high points. appreciate although little dazed project, patch goes , find time enjoy admire work using package re-submitted. document, point highlight functions making package update. functions created based pure creativity proper understanding assay concept. even functions came fly troubleshooting even believe . Similar NBA dunks make players feel like just body experience. don’t point LOWs process going making package seeing major flaw immediately publishing LOW. making package often seems like LOW run issues almost every step. win everything works test cases pass.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/articles/highlights.html","id":"resample_dat-series","dir":"Articles","previous_headings":"","what":"💯 resample_dat series","title":"highlights","text":"perhaps difficult part learning code R making package. used considerable amount time learning R works procedure hours hours understanding R process, function born. pride felt worked short lived one best best moments. simplest form function. Several functions concept born .","code":"resample_dat <- function(df, tnp, cycles){    suppressWarnings({      type_size <- c(1:tnp)     k <- c(1:tnp)      resulting_df <- data.frame()     for (i in 1:(nrow(df)/tnp)){        colnames(resulting_df) = NULL       insert_row = df[k,]       colnames(insert_row) = NULL        resulting_df[i,type_size] <- rbind(insert_row, resulting_df)        increment = tnp       k <- k + increment     }     return(resulting_df)    })  }"},{"path":"https://alphaprime7.github.io/normfluodbf/articles/highlights.html","id":"qc","dir":"Articles","previous_headings":"","what":"👌 QC","title":"highlights","text":"QC series functions impressive. SUPER PROUD function inspired experimental errors commited performing assays . best showed knew valued Quality else. fact, lot things life useless without form quality control can help separate noise signal. function . Also, Ubuntu way without punishing user. forgiving given function took considerable amount time make. almost QUIT function.","code":"fluor_threshold_check <- function(clean_df, fun = NA){    load.emojifont(font = \"EmojiOne.ttf\")    nofun <- is.na(fun)   clean_df <- rbind(clean_df, NA)   clean_df <- cbind(clean_df, NA)   for(i in 1:nrow(clean_df)){     for(j in 1:ncol(clean_df)){       if ( clean_df[i,j] >= (2^15) && is.na(clean_df[i,j]) != nofun ){         message(c(emoji('pig'), emoji('camel'), emoji('lion')))         message(paste(\"YIKES, value > 2^15, Watch in future experimental designs\",'column:', j , 'row:', i))       } else if ( clean_df[i,j] <= (2^11) && is.na(clean_df[i,j]) != nofun ){         message(c(emoji('pig'), emoji('camel')))         message(paste(\"YIKES, value < 2^11, Watch in future experimental designs\",'column:', j , 'row:', i))       }     }   } }"},{"path":"https://alphaprime7.github.io/normfluodbf/articles/highlights.html","id":"actual_cols_used","dir":"Articles","previous_headings":"","what":"💣 actual_cols_used()","title":"highlights","text":"Perhaps one last main functions package needed. initial approach user provide data several hiccups making package, realized data information. spot whipped package super useful. another GREAT HIGH.","code":"actual_cols_used <- function(dat){   df <- utils::read.table(dat)   df <- clean_odddat_optimus(df)   colnames(df) <- c(1:ncol(df))   acu <- names(which(colSums(!is.na(df)) > 0))   acu <- as.numeric(as.vector(acu))    return(acu) }"},{"path":"https://alphaprime7.github.io/normfluodbf/articles/highlights.html","id":"final-remarks","dir":"Articles","previous_headings":"","what":"⌛ Final Remarks","title":"highlights","text":"culmination functions normfluodat high moment beat developing subordinate functions helped make main function. Every moment needed subordinate function highlighted power package HIGHEST moment referencing subordinate functions main processes within package; feeling surreal. final result often expected work put little things sub-processes upon main process dependent upon. proud final recipe normfluodat top ingenious moments thought cultivate pieces needed get final product. Hope anyone stumbles upon page package gets read take . Well Done !! Moving another big project.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/articles/input.html","id":"accessing-test-dbf-files","dir":"Articles","previous_headings":"","what":"🗃️ Accessing test DBF files","title":"Input: Example Data sets","text":"","code":"#External files for use in testing the package. dir(system.file(\"extdata\", package = \"normfluodbf\"))  #Choose a single file to test the package system.file(\"extdata\", data_object, package = \"normfluodbf\", mustWork = TRUE)  #Example raw_dbf <- system.file(\"extdata\", \"liposomes_214.dbf\", package = \"normfluodbf\", mustWork = TRUE)  #pass the file through the function normfluodbf::norm_tidy_dbf(raw_dbf, norm_scale = 'z-score')"},{"path":"https://alphaprime7.github.io/normfluodbf/articles/input.html","id":"accessing-test-dat-files","dir":"Articles","previous_headings":"","what":"🗂️ Accessing test DAT files","title":"Input: Example Data sets","text":"","code":"#External files for use in testing the package. dir(system.file(\"extdata\", package = \"normfluodbf\"))  #Choose a single file to test the package system.file(\"extdata\", data_object, package = \"normfluodbf\", mustWork = TRUE)  #Example raw_dat <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE)  #pass the file through the function normfluodbf::normfluodat(raw_dat, tnp = 3, cycles = 40, norm_scale = 'hundred')"},{"path":"https://alphaprime7.github.io/normfluodbf/articles/install_normfluodbf.html","id":"installing-the-package","dir":"Articles","previous_headings":"","what":"📦 Installing the package","title":"Install normfluodbf","text":"","code":"# Install from Github install.packages(\"remotes\") #if not present library(remotes) remotes::install_github(\"AlphaPrime7/normfluodbf\") pak::pak(\"AlphaPrime7/normfluodbf\")  #Install locally from source library(remotes) remotes::install_local(\"normfluodbf_1.5.2.tar.gz\")  #From CRAN based on availability install.packages(\"normfluodbf\") library(normfluodbf)"},{"path":"https://alphaprime7.github.io/normfluodbf/articles/normfluodbf.html","id":"what-is","dir":"Articles","previous_headings":"","what":"👨🏾‍💻 📦 What is ?","title":"normfluodbf","text":"{normfluodbf} package designed clean normalize DBF DAT files obtained liposome flux assay (LFA) experiments performed FLUOstar microplate reader. package designed multi-dimensional, meaning expectation file types experiments liposome flux assays compliant package meet requirements original files package designed. File Types","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/articles/normfluodbf.html","id":"package-context","dir":"Articles","previous_headings":"","what":"💊 Package Context","title":"normfluodbf","text":"inspiration behind something like normfluodbf? First, name package misleading initially designed clean normalize DBF files; however, package able clean DAT files well. next sub-sections shed light context creation package. First, look abstract seminar presented graduate student.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/articles/normfluodbf.html","id":"abstract","dir":"Articles","previous_headings":"💊 Package Context","what":"🧬 👨‍🔬 Abstract","title":"normfluodbf","text":"Liposome flux assays (LFAs) provide robust, affordable, high throughput tool study membrane channels. project entailed adapting LFA system (Su et al., 2016) used study Potassium (K) channels. project conceptualized LFA system centered around Voltage-gated sodium channels (NaVs), specifically NavAb channel. NaVs physiologically important generation action potentials within systems require excitability function pathologically linked conditions like epilepsy, migraines, etc. One reasoned developing testing LFA system context NavAb, successful, provide good tool screening molecules capable NavAb interactions (therapeutic pathological scenarios). Interestingly, NavAb can conduct Na+ H+ ions, amongst others, project one completed focused proton (H+) conductivity channel. One developed liposomes NavAb insertions, specific conditions, able detect proton (H+) conductivity channel driven K+ Cs+ Nernst potentials. One utilized fluorophore (ACMA) within liposome proton flux signal indicator experimental conditions. confirmed NavAb can conduct protons (H+), NavAb LFA system worked, found increasing concentrations ACMA (2-5 uM) within acceptable range (0.2uM 20uM) effect proton quenching. aberrant observation high concentrations ACMA (20uM) generated noise useful determining noise-signal boundaries. One thought fascinating find system understood interpreted using noise well signal.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/articles/normfluodbf.html","id":"what-are-liposome-flux-assays","dir":"Articles","previous_headings":"💊 Package Context","what":"🧪 What are Liposome Flux Assays ?","title":"normfluodbf","text":"Assays use channel-insert liposomes coupled fluorophore (ACMA common) understand properties behaviors channels --cell context. inserted channels synthesized biological procedures used understanding electrophysiological properties ion channels. assay applications drug development. Potential drug targets can screened including targets assays decipher affect ion channel probed. route almost took utilizing assay understand behavior chloride channels find possible drug targets condition like Cystic Fibrosis. idea inspired peer mine sibling cystic fibrosis. lot can said assay, stick big picture leave rest imagination reader. glimpse can done assay.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/articles/normfluodbf.html","id":"specific-concepts-solved-by-normfluodbf-1-5-2","dir":"Articles","previous_headings":"💊 Package Context","what":"⛳ Specific Concepts Solved by normfluodbf 1.5.2","title":"normfluodbf","text":"higher-level problem-solving, enough blurry pain points. important excellent articulation separate concepts surrounding pain points. pain point data obtained FLUOstar instrument friendly analysis, thus requiring wrangling researcher can conduct data analysis output amazing visuals can aid extracting insights experiment simply presentations project stakeholders. little valuable insight derived analyzing data sliding scale. cleaning data, normalization needed. DBF file obtained instrument harder find DAT file. package gives user option analyze DAT file, allow overall better experience.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/articles/normfluodbf.html","id":"who-should-use-normfluodbf-1-5-2","dir":"Articles","previous_headings":"💊 Package Context","what":"🏌️ Who Should Use normfluodbf 1.5.2 ?","title":"normfluodbf","text":"Biologists (students professors) conduct research across USA globally can attest use physics concepts, specifically fluorescence, understanding biophysical properties biological components (cells, DNA, RNA, proteins, etc.). package designed scientists (academic pharmaceutical settings) need tool analyze data obtained FLUOstar Omega microplate reader. unsure far-reaching capabilities FLUOstar microplate reader since , , physics concept, might industries beyond pharmaceutical industry might find package useful. graduate student, wish package existed, hope saves lot time researchers.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/articles/normfluodbf.html","id":"how-did-chatgpt-help","dir":"Articles","previous_headings":"💊 Package Context","what":"🤖 💩 How did ChatGPT Help ?","title":"normfluodbf","text":"Upon completion package, went ChatGPT created assistant help clean DAT file. ChatGPT unable perform data wrangling using pandas. ChatGPT solution problem. still big fan.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/articles/normfluodbf.html","id":"what-the-future-holds","dir":"Articles","previous_headings":"💊 Package Context","what":"🔮 What the future holds ?","title":"normfluodbf","text":"package reached maturity. maintain package best ability. package officially full baked solution. currently determining cost benefit analysis submitting program Journal Open Source Software (JOSS). working seeing integrate function calling ChatGPT use R cleaning DAT files. functions package can hopefully used ChatGPT clean normalize DAT DBF files FLUOstar instrument.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/articles/normfluodbf.html","id":"cheers","dir":"Articles","previous_headings":"💊 Package Context","what":"🍻 Cheers","title":"normfluodbf","text":"leave fun. basement MVP love, don’t know long since rent looking massive. Thanks users 1.4.3 hope made lives tad bit easier update (1.5.2). Raise issues forward emails quickly notice hiccups R changes need updates. R DEV . go name now badge.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/articles/out_analysis.html","id":"accessing-test-dbf-files","dir":"Articles","previous_headings":"","what":"📊 Accessing test DBF files","title":"Example","text":"","code":"raw_dbf <- system.file(\"extdata\", \"liposomes_214.dbf\", package = \"normfluodbf\", mustWork = TRUE)  norm_dbf <- normfluodbf::norm_tidy_dbf(raw_dbf, norm_scale = 'z-score')  yvars <- c(\"A01\",\"A02\",\"A03\") #tnp xvar <- c(\"Cycle_Number\", \"Time\") xl <- c(1,40) yl <- c(0,1)  ggplot_tnp(norm_dbf,xvar,y_list=yvars,xlim=xl,ylim=yl)"},{"path":"https://alphaprime7.github.io/normfluodbf/articles/out_analysis.html","id":"accessing-test-dat-files","dir":"Articles","previous_headings":"","what":"📊 Accessing test DAT files","title":"Example","text":"","code":"#{r setupdatviz, eval=FALSE} raw_dat <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE)  n <- c('A','B','C') norm_dat <- normfluodbf::normfluodat(raw_dat, tnp = 3, cycles = 40, n, read_direction = 'horizontal')  yvars <- c(\"A1\",\"A2\",\"A3\") #tnp xvar <- c(\"Cycle_Number\", \"Time\") xl <- c(1,40) yl <- c(0,1)  ggplot_tnp(norm_dat,xvar,y_list=yvars,xlim=xl,ylim=yl)"},{"path":"https://alphaprime7.github.io/normfluodbf/articles/test_file.html","id":"introduction","dir":"Articles","previous_headings":"","what":"🎬 Introduction","title":"test_file","text":"arrive massive documentation like seven functions, Microsoft Word leveraged. hard-work put making template first function. idea take one template replace function name MS word replace function. helps create massive documentation testing functions. case scenarios pass pride factor functions yield correct column names thanks function called actual_cols_used().","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/articles/test_file.html","id":"normfluodat--mvp-minimum-viable-product","dir":"Articles","previous_headings":"","what":"🕵️ Normfluodat- MVP (Minimum Viable Product)","title":"test_file","text":"function considered MVP. robust trusted function Users use .","code":"# Normal cases dat(1-4) fpath <- system.file(\"extdata\", \"dat_2.dat\", package = \"normfluodbf\", mustWork = TRUE) normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'hundred') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'one') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'hundred') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'one') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'hundred') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'one') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40) normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3)) normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3), read_direction = 'horizontal')  # Extreme cases dat(5-7) fpath <- system.file(\"extdata\", \"dat_5.dat\", package = \"normfluodbf\", mustWork = TRUE) normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'hundred') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'one') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'hundred') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'one') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'hundred') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'one') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40) normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A'), cols_used = c(1)) normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A'), cols_used = c(1,2))  normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3)) normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluodat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3), read_direction = 'horizontal')"},{"path":"https://alphaprime7.github.io/normfluodbf/articles/test_file.html","id":"normfluodatlite","dir":"Articles","previous_headings":"","what":"🕵️ Normfluodatlite","title":"test_file","text":"","code":"# Normal cases dat(1-4) fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) normalized_fluo_dat <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'hundred') normalized_fluo_dat <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'one') normalized_fluo_dat <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'hundred') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'one') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'hundred') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'one') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40) normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3)) normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3), read_direction = 'horizontal')  # Extreme cases dat(5-7) fpath <- system.file(\"extdata\", \"dat_5.dat\", package = \"normfluodbf\", mustWork = TRUE) normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'hundred') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'one') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'hundred') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'one') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'hundred') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'one') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40) normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3)) normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3)) normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3))  normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3)) normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluodatlite(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3), read_direction = 'horizontal')"},{"path":"https://alphaprime7.github.io/normfluodbf/articles/test_file.html","id":"normfluodatfull","dir":"Articles","previous_headings":"","what":"🕵️ Normfluodatfull","title":"test_file","text":"","code":"# Normal cases dat(1-4) fpath <- system.file(\"extdata\", \"dat_3.dat\", package = \"normfluodbf\", mustWork = TRUE) normalized_fluo_dat <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'hundred') normalized_fluo_dat <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'one') normalized_fluo_dat <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'hundred') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'one') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'hundred') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'one') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40) normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3)) normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3), read_direction = 'horizontal')  # Extreme cases dat(5-7) fpath <- system.file(\"extdata\", \"dat_6.dat\", package = \"normfluodbf\", mustWork = TRUE) normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'hundred') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'one') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical', norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'hundred') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'one') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal', norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'hundred') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'one') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'z-score') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'decimal') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), norm_scale = 'raw') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40) normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3)) normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluodatfull(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3), read_direction = 'horizontal')"},{"path":"https://alphaprime7.github.io/normfluodbf/articles/test_file.html","id":"normfluordat","dir":"Articles","previous_headings":"","what":"🕵️ Normfluordat","title":"test_file","text":"","code":"# Normal cases dat(1-4) fpath <- system.file(\"extdata\", \"dat_3.dat\", package = \"normfluodbf\", mustWork = TRUE) normalized_fluo_dat <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40) normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3)) normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 3, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3), read_direction = 'horizontal')  # Extreme cases dat(5-7) fpath <- system.file(\"extdata\", \"dat_5.dat\", package = \"normfluodbf\", mustWork = TRUE) normalized_fluo_dat <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), read_direction = 'horizontal') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C')) normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40) normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3)) normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3), read_direction = 'vertical') normalized_fluo_dat_advv <- normfluordat(dat=fpath, tnp = 1, cycles = 40,rows_used = c('A','B','C'), cols_used = c(1,2,3), read_direction = 'horizontal')"},{"path":"https://alphaprime7.github.io/normfluodbf/articles/test_file.html","id":"normfluordbf","dir":"Articles","previous_headings":"","what":"🕵️ Normfluordbf","title":"test_file","text":"","code":"#normfluordbf fpath <- system.file(\"extdata\", \"liposomes_214.dbf\", package = \"normfluodbf\", mustWork = TRUE) norm_dbf <- normfluordbf(fpath, norm_scale = 'raw') norm_dbf <- normfluordbf(fpath, norm_scale = 'decimal') norm_dbf <- normfluordbf(fpath, norm_scale = 'one') norm_dbf <- normfluordbf(fpath, norm_scale = 'hundred') norm_dbf <- normfluordbf(fpath, norm_scale = 'z-score')"},{"path":"https://alphaprime7.github.io/normfluodbf/articles/test_file.html","id":"norm_tidy_dbf","dir":"Articles","previous_headings":"","what":"🕵️ Norm_tidy_dbf","title":"test_file","text":"","code":"#norm_tidy_dbf fpath <- system.file(\"extdata\", \"liposomes_214.dbf\", package = \"normfluodbf\", mustWork = TRUE) norm_dbf <- norm_tidy_dbf(fpath, norm_scale = 'raw') norm_dbf <- norm_tidy_dbf(fpath, norm_scale = 'decimal') norm_dbf <- norm_tidy_dbf(fpath, norm_scale = 'one') norm_dbf <- norm_tidy_dbf(fpath, norm_scale = 'hundred') norm_dbf <- norm_tidy_dbf(fpath, norm_scale = 'z-score')"},{"path":"https://alphaprime7.github.io/normfluodbf/articles/test_file.html","id":"visualize","dir":"Articles","previous_headings":"","what":"🕵️ Visualize","title":"test_file","text":"","code":"#Visualize  #DAT #z-score ggplot_tnp(normalized_fluo_dat, c('Cycle_Number'), c('A1','B1','C1'),c(0,40),c(-1,3))  #hundred ggplot_tnp(normalized_fluo_dat, c('Cycle_Number'), c('A1','B1','C1'),c(0,40),c(0,100))  #one ggplot_tnp(normalized_fluo_dat, c('Cycle_Number'), c('A1','B1','C1'),c(0,40),c(0,1))  #raw & decimal (sliding scale) ggplot_tnp(normalized_fluo_dat, c('Cycle_Number'), c('A1','B1','C1'),c(0,40),ylim = NULL)  #DBF ggplot_tnp(norm_dbf, c('Cycle_Number'), c('A01','B01','C01'),c(0,40),ylim = NULL) ggplot_tnp(norm_dbf, c('Time'), c('A01','B01','C01'),xlim = NULL, ylim = NULL)"},{"path":"https://alphaprime7.github.io/normfluodbf/articles/test_file.html","id":"final-remarks","dir":"Articles","previous_headings":"","what":"🕵 Final Remarks","title":"test_file","text":"MVP normfluodat users always use function. normfluodat also provide user option seeing raw file raw fluorescence values. also helps detect data corruption issues. functions tested passed almost every scenario. vignette educative indicates testing can done large packages like one. Prompted failures update release, got work noticed way package proud users best experience. room find ways automating process working .","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tingwei Adeck. Author, maintainer. normfluodbf authors. Copyright holder.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Adeck T (2023). normfluodbf: Cleans Normalizes FLUOstar DBF DAT Files. https://github.com/AlphaPrime7/normfluodbf, https://alphaprime7.github.io/normfluodbf/.","code":"@Manual{,   title = {normfluodbf: Cleans and Normalizes FLUOstar DBF and DAT Files},   author = {Tingwei Adeck},   year = {2023},   note = {https://github.com/AlphaPrime7/normfluodbf, https://alphaprime7.github.io/normfluodbf/}, }"},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement awesome.tingwei@outlook.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"id_-️-quick-start","dir":"","previous_headings":"","what":"⏩ 📽️ Quick start","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"quick starters, please visit {video tutorial} illustration effectively use package. video tutorial covers DAT files based assumption users interested using package DAT files.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"id_️-introduction","dir":"","previous_headings":"","what":"✍️ Introduction","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"{normfluodbf} used clean normalize DBF DAT files obtained liposome flux assay experiments performed FLUOstar microplate reader. expectation package limited assay type assay types performed instrument. final data frames obtained package ready insightful data analysis creation amazing visuals (using ggplot2) help making scientific deductions making presentations project stakeholders. project firmly represents core belief public dissemination scientific information. convictions idea public dissemination driven book “Mad Pursuit” Francis Crick. Visit {page} details concept behind project.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"developmental-version","dir":"","previous_headings":"","what":"Developmental Version","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"development version {normfluodbf} can installed illustrated :","code":"devtools::install_github(\"AlphaPrime7/normfluodbf\") pak::pak(\"AlphaPrime7/normfluodbf\") remotes::install_github(\"AlphaPrime7/normfluodbf\")"},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"cran-version","dir":"","previous_headings":"","what":"CRAN Version","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"CRAN version {normfluodbf} can installed illustrated :","code":"install.packages(\"normfluodbf\") library(normfluodbf)"},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"local-installation","dir":"","previous_headings":"","what":"Local Installation","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"Visit {normfluodbf_builds} download zip files desired directory. repository updated latest accepted CRAN version possible.","code":"install.packages(\"normfluodbf_1.5.2.tar.gz\", repos = NULL, type = \"source\") library(devtools) install_local(\"normfluodbf_1.5.2.tar.gz\") library(remotes) remotes::install_local(\"normfluodbf_1.5.2.tar.gz\")"},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"id_-dbf-files-case-study-","dir":"","previous_headings":"","what":"🧭 DBF Files Case-Study","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"examples presented package handles DBF files.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"backward-compatible-function","dir":"","previous_headings":"🧭 DBF Files Case-Study","what":"Backward Compatible Function","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"methodology grandfathered initial adopters normfluodbf. Package illustration DBF files:","code":"#library(normfluodbf) liposomes_214 <- system.file(\"extdata\", \"liposomes_214.dbf\", package = \"normfluodbf\") normalized_data <- norm_tidy_dbf(liposomes_214, norm_scale = 'hundred')"},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"new-function","dir":"","previous_headings":"🧭 DBF Files Case-Study","what":"New Function","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"next methodology provides easier syntax prefer function name function name .","code":"library(normfluodbf) liposomes_214 <- system.file(\"extdata\", \"liposomes_214.dbf\", package = \"normfluodbf\") normalized_data <- normfluordbf(liposomes_214) normalized_data <- normfluordbf(liposomes_214)"},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"advanced-features-illustration","dir":"","previous_headings":"🧭 DBF Files Case-Study","what":"Advanced Features Illustration","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"next section elaborates new features added handling DBF files.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"dbf-normalization-procedures","dir":"","previous_headings":"🧭 DBF Files Case-Study","what":"DBF Normalization Procedures","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"","code":"library(normfluodbf) liposomes_214 <- system.file(\"extdata\", \"liposomes_214.dbf\", package = \"normfluodbf\") normalized_data <- norm_tidy_dbf(liposomes_214, norm_scale = 'one') normalized_data100 <- norm_tidy_dbf(liposomes_214, norm_scale = 'hundred') normalized_dataz <- norm_tidy_dbf(liposomes_214, norm_scale = 'z-score')  # The user can add a transformation parameter normalized_datazt <- norm_tidy_dbf(liposomes_214, norm_scale = 'z-score', transformed = 'log') library(normfluodbf) liposomes_214 <- system.file(\"extdata\", \"liposomes_214.dbf\", package = \"normfluodbf\") normalized_data <- normfluordbf(liposomes_214, norm_scale = 'one') normalized_data100 <- normfluordbf(liposomes_214, norm_scale = 'hundred') normalized_dataz <- normfluordbf(liposomes_214, norm_scale = 'z-score')  # The user can add a transformation parameter normalized_datazt <- normfluordbf(liposomes_214, norm_scale = 'z-score', transformed = 'log')"},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"advanced-function","dir":"","previous_headings":"🧭 DAT Files Case-Study","what":"Advanced Function","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"methodology provided minor update normfluodbf 1.5.2. update significantly bigger expected major update definition backward compatibility maintained previous version, considered minor update. three parameters MUST function work.","code":"library(normfluodbf) dat1 <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\") normalized_data <- normfluodat(dat1, tnp = 3, cycles = 40, rows_used = c('A','B','C'))"},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"base-function","dir":"","previous_headings":"🧭 DAT Files Case-Study","what":"Base Function","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"next methodology base version function . methodology less features function . Please note examples indicate simplest scenarios functions features presented .","code":"library(normfluodbf) dat2 <- system.file(\"extdata\", \"dat_2.dat\", package = \"normfluodbf\") normalized_data <- normfluordat(dat2, tnp = 3, cycles = 40, rows_used = c('A','B','C'))"},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"dat-advanced-procedures","dir":"","previous_headings":"🧭 DAT Files Case-Study","what":"DAT Advanced Procedures","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"next sections elaborate built-features handling DAT files.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"using-the-rows_used-parameter","dir":"","previous_headings":"🧭 DAT Files Case-Study > DAT Advanced Procedures","what":"Using The rows_used parameter","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"parameter used alone user need worry providing columns used. default read direction vertical. program robust algorithm recipe determining attribute names based rows used. Users strongly encouraged provide rows_used parameter. Pay attention illustrations . setup represents standard experimental setup. default vertical read direction means final data frame presented format .","code":"library(normfluodbf) dat2 <- system.file(\"extdata\", \"dat_2.dat\", package = \"normfluodbf\") n <- c('A','B','C') #rows used normalized_data16 <- normfluodat(dat2, tnp = 3, cycles = 40, n)"},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"using-the-rows_used-and-cols_used-parameter","dir":"","previous_headings":"🧭 DAT Files Case-Study > DAT Advanced Procedures","what":"Using The rows_used and cols_used parameter","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"cols_used parameter used user suspects inconsistencies experimental procedure. Otherwise, user let program determine columns used. cols_used parameter especially relevant user loads samples unorthodox way. default read direction vertical indicated earlier. Users advised supply cols_used program robust algorithm determining cols_used.","code":"library(normfluodbf) dat2 <- system.file(\"extdata\", \"dat_2.dat\", package = \"normfluodbf\") n <- c('A','B','C') c <- c(5,6,7) normalized_data <- normfluodat(dat2, tnp = 3, cycles = 40, rows_used=n, cols_used=c)"},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"using-the-user_specific_labels-parameter","dir":"","previous_headings":"🧭 DAT Files Case-Study > DAT Advanced Procedures","what":"Using The user_specific_labels parameter","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"user provides user_specific_labels parameter use rows_used cols_used parameter together rows_used parameter alone. trade-user either lets program generate column names user decides take CONTROL . user_specific_labels parameter proactive move user user complicated experimental setup can lead wrong attribute names. Hypothetically, user uses rows columns indicated examples Using rows_used cols_used parameter skips wells, user can simply go ahead use user_specific_labels add correct column names final data frame. However, scenario occurs user indicates 9 wells used program detects fewer 9 samples, program inform user ask user choose list column names. Illustration :","code":"library(normfluodbf) dat2 <- system.file(\"extdata\", \"dat_2.dat\", package = \"normfluodbf\") manual_cols <- c('A1','B1','C1') normalized_data <- normfluodat(dat2, tnp = 3, cycles = 40, user_specific_labels = manual_cols)"},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"id_️️-using-the-read_direction-parameter","dir":"","previous_headings":"🧭 DAT Files Case-Study > DAT Advanced Procedures","what":"🧙‍♂️️ Using The read_direction parameter","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"indicated previous examples, default read direction vertical provided illustrations form tables shows expected outcome. read_direction can indicated explicitly vertical left NULL must indicated explicitly horizontal obtain different outcome. horizontal read direction means final data frame presented format .","code":"library(normfluodbf) dat2 <- system.file(\"extdata\", \"dat_2.dat\", package = \"normfluodbf\") manual_cols <- c('A1','B1','C1') normalized_data <- normfluodat(dat2, tnp = 3, cycles = 40, n, read_direction = 'horizontal')"},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"using-the-norm_scale-parameter","dir":"","previous_headings":"🧭 DAT Files Case-Study > DAT Advanced Procedures","what":"Using The norm_scale parameter","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"Just like DBF procedure, provided options normalization scales. favorite z-score scale provides clarity thinking results.","code":"library(normfluodbf) dat2 <- system.file(\"extdata\", \"dat_2.dat\", package = \"normfluodbf\") manual_cols <- c('A1','B1','C1') normalized_data <- normfluodat(dat2, tnp = 3, cycles = 40, n, read_direction = 'horizontal', norm_scale = 'hundred')"},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"the-non-standard-experimental-setup","dir":"","previous_headings":"","what":"The Non-standard Experimental Setup","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"look non-standard experimental setup. take look machine sees. keen observation vertical read direction program package yields final data frame conceptually looks like horizontal read direction test samples clustered illustration . Using non-standard setup simply affects attribute naming conventions otherwise everything fine. just quick illustration non-standard setup. setup change anything algorithms simply showcases naming conventions reverse experimenter deviates commonly used path.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"id_-fail-safe-dat-procedure","dir":"","previous_headings":"","what":"🥠 Fail Safe DAT Procedure","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"indicated earlier, code chunk simplest use case function. AHOI, user gets data frame samples perfectly separated attribute names. important mention point twice.","code":"library(normfluodbf) dat1 <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\") normalized_data <- normfluodat(dat1, tnp = 3, cycles = 40, rows_used = c('A','B','C') )"},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"id_-quality-control-qc","dir":"","previous_headings":"","what":"🛂 Quality Control (QC)","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"Experimental issues investigated high low fluorescence values. common experimental issues arise ACMA concentrations tolerated range. Based experience, ACMA concentrations 2 5 Micromolar suffice get fluorescence values within tolerance threshold. ACMA concentrations low 0.2 Micromolar high 20 Micromolar proven problematic based research experience. ACMA concentrations proven NOISY provide basis determining noise-signal regions. Another issue linked FLUOstar instrument revolves around setting right “gain” ensure right level sensitivity machine readings. high “gain” setting results increased machine sensitivity even right ACMA concentrations vice versa. short, want machine primed read exactly feed , , less. program boasts quality control function help new researchers avoid pitfalls can mar experience performing experiments. Within package, QC function designed check fluorescence values exceed upper limit (2^15 32768) fall lower limit (2^11 2048). Fluorescence values exceed thresholds considered noisy can lead incorrect interpretation analysis results. images presented represent results obtained experiments conducted within noise region. X-axis actually “Cycle_No” seemed mislabeled due tedious nature previous coding approach.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"id_-visualization","dir":"","previous_headings":"","what":"💻 Visualization","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"time around, package visualization function built ggplot2. Users can expect get amazing visualizations using function. visualizations seminar topic. done base R images represent results obtained experiments conducted within signal region.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"id_-epilogue","dir":"","previous_headings":"","what":"🎇 Epilogue","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"interesting getting package maturity. Users advised default simplest use cases find learning curve (LC) package steep. almost certain always something improve can say package officially complete based project scope.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/index.html","id":"id_-references","dir":"","previous_headings":"","what":"📃 References","title":"Cleans and Normalizes FLUOstar DBF and DAT Files","text":"(Dowle Srinivasan 2023) (Wickham, François, et al. 2023) (Yu 2021) (R Core Team 2022) (Wickham, Chang, et al. 2023) (Arnold 2021) (Wickham 2022) (Müller Wickham 2023) (Wickham, Vaughan, Girlich 2023)","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 normfluodbf authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/actual_cols_used.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to get the actual columns used in the assay. — actual_cols_used","title":"Title: A function to get the actual columns used in the assay. — actual_cols_used","text":"function facilitates users' workflow helping extract actual columns used assay.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/actual_cols_used.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to get the actual columns used in the assay. — actual_cols_used","text":"","code":"actual_cols_used(dat)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/actual_cols_used.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to get the actual columns used in the assay. — actual_cols_used","text":"dat string (\"dat_1.dat\") file found within present working directory (pwd) path pointing directly \".dat\" file.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/actual_cols_used.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to get the actual columns used in the assay. — actual_cols_used","text":"Returns numeric vector denoting columns used assay.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/actual_cols_used.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to get the actual columns used in the assay. — actual_cols_used","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/actual_cols_used.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to get the actual columns used in the assay. — actual_cols_used","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) acutest <- actual_cols_used(fpath)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/check_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to check for DATs in a directory. — check_dat","title":"Title: A function to check for DATs in a directory. — check_dat","text":"function facilitates users' workflow helping check DATs directory.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/check_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to check for DATs in a directory. — check_dat","text":"","code":"check_dat(pathstring)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/check_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to check for DATs in a directory. — check_dat","text":"pathstring string path directory containing files.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/check_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to check for DATs in a directory. — check_dat","text":"Returns list DAT files warning.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/check_dat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to check for DATs in a directory. — check_dat","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/check_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to check for DATs in a directory. — check_dat","text":"","code":"if (FALSE) { fpath <- system.file(\"extdata\", package = \"normfluodbf\", mustWork = TRUE) setwd(fpath) check_dat(getwd()) }"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/check_dbf.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to check for DBFs in a directory. — check_dbf","title":"Title: A function to check for DBFs in a directory. — check_dbf","text":"function facilitates users' workflow helping check DBFs directory.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/check_dbf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to check for DBFs in a directory. — check_dbf","text":"","code":"check_dbf(pathstring)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/check_dbf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to check for DBFs in a directory. — check_dbf","text":"pathstring string path directory containing files.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/check_dbf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to check for DBFs in a directory. — check_dbf","text":"Returns list DBF files warning.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/check_dbf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to check for DBFs in a directory. — check_dbf","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/check_dbf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to check for DBFs in a directory. — check_dbf","text":"","code":"if (FALSE) { fpath <- system.file(\"extdata\", package = \"normfluodbf\", mustWork = TRUE) setwd(fpath) check_dbf(getwd()) }"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/clean_odddat_optimus.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: DAT file data frame cleaner. — clean_odddat_optimus","title":"Title: DAT file data frame cleaner. — clean_odddat_optimus","text":"function takes dirty data frame obtained reading FLUOstar DAT file, applies original algorithm inserts NAs place special characters, applies function called comma_cleaner() dirty data frame removal commas, finally, rows NAs removed.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/clean_odddat_optimus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: DAT file data frame cleaner. — clean_odddat_optimus","text":"","code":"clean_odddat_optimus(df)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/clean_odddat_optimus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: DAT file data frame cleaner. — clean_odddat_optimus","text":"df dirty data frame obtained FLUOstar DAT file.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/clean_odddat_optimus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: DAT file data frame cleaner. — clean_odddat_optimus","text":"clean data frame clean NA values retained.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/clean_odddat_optimus.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: DAT file data frame cleaner. — clean_odddat_optimus","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/clean_odddat_optimus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: DAT file data frame cleaner. — clean_odddat_optimus","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) partial_cleaned_dat <- clean_odddat_optimus(dat_df)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/clean_odd_cc.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: DAT file data frame cleaner. — clean_odd_cc","title":"Title: DAT file data frame cleaner. — clean_odd_cc","text":"function takes dirty data frame obtained reading FLUOstar DAT file applies function called comma_cleaner() dirty data frame, automatically inserts NAs place special characters, rows NAs removed.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/clean_odd_cc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: DAT file data frame cleaner. — clean_odd_cc","text":"","code":"clean_odd_cc(df)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/clean_odd_cc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: DAT file data frame cleaner. — clean_odd_cc","text":"df dirty data frame obtained FLUOstar DAT file.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/clean_odd_cc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: DAT file data frame cleaner. — clean_odd_cc","text":"clean data frame clean NA values retained.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/clean_odd_cc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: DAT file data frame cleaner. — clean_odd_cc","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/clean_odd_cc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: DAT file data frame cleaner. — clean_odd_cc","text":"","code":"fpath <- system.file(\"extdata\", \"dat_3.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) cleaned_dat <- clean_odd_cc(dat_df)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/comma_cleaner.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: Comma Cleaner function. — comma_cleaner","title":"Title: Comma Cleaner function. — comma_cleaner","text":"modular function, context package, responsible removing commas attribute(s) values. Removal commas facilitates conversion attributes numeric class.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/comma_cleaner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: Comma Cleaner function. — comma_cleaner","text":"","code":"comma_cleaner(comma_df)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/comma_cleaner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: Comma Cleaner function. — comma_cleaner","text":"comma_df dirty data frame obtained FLUOstar DAT file.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/comma_cleaner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: Comma Cleaner function. — comma_cleaner","text":"clean data frame numeric -comma values attribute(s).","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/comma_cleaner.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: Comma Cleaner function. — comma_cleaner","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/comma_cleaner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: Comma Cleaner function. — comma_cleaner","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- comma_cleaner(dat_df) #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion #> Warning: NAs introduced by coercion"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_1.html","id":null,"dir":"Reference","previous_headings":"","what":"dat_1. — dat_1","title":"dat_1. — dat_1","text":"FLUOstar .dat files used creation update unusable immediate data analysis.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dat_1. — dat_1","text":"","code":"dat_1"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"dat_1. — dat_1","text":"object class data.frame 320 rows 12 columns.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_2.html","id":null,"dir":"Reference","previous_headings":"","what":"dat_2. — dat_2","title":"dat_2. — dat_2","text":"FLUOstar .dat files used creation update unusable immediate data analysis.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dat_2. — dat_2","text":"","code":"dat_2"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"dat_2. — dat_2","text":"object class data.frame 320 rows 12 columns.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_3.html","id":null,"dir":"Reference","previous_headings":"","what":"dat_3. — dat_3","title":"dat_3. — dat_3","text":"FLUOstar .dat files used creation update unusable immediate data analysis. file unique validates major bug fix ensure users get right output.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dat_3. — dat_3","text":"","code":"dat_3"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"dat_3. — dat_3","text":"object class data.frame 320 rows 12 columns.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_4.html","id":null,"dir":"Reference","previous_headings":"","what":"dat_4. — dat_4","title":"dat_4. — dat_4","text":"FLUOstar .dat files used creation update unusable immediate data analysis. file unique validates major bug fix ensure users get right output.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dat_4. — dat_4","text":"","code":"dat_4"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"dat_4. — dat_4","text":"object class data.frame 320 rows 1 columns.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_5.html","id":null,"dir":"Reference","previous_headings":"","what":"dat_5. — dat_5","title":"dat_5. — dat_5","text":"FLUOstar .dat files used creation update unusable immediate data analysis. file unique validates major bug fix ensure users get right output.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dat_5. — dat_5","text":"","code":"dat_5"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"dat_5. — dat_5","text":"object class data.frame 105 rows 1 columns.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_6.html","id":null,"dir":"Reference","previous_headings":"","what":"dat_6. — dat_6","title":"dat_6. — dat_6","text":"FLUOstar .dat files used creation update unusable immediate data analysis. file unique validates major bug fix ensure users get right output.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dat_6. — dat_6","text":"","code":"dat_6"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"dat_6. — dat_6","text":"object class data.frame 105 rows 2 columns.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_7.html","id":null,"dir":"Reference","previous_headings":"","what":"dat_7. — dat_7","title":"dat_7. — dat_7","text":"FLUOstar .dat files used creation update unusable immediate data analysis. file unique validates major bug fix ensure users get right output.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_7.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dat_7. — dat_7","text":"","code":"dat_7"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_7.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"dat_7. — dat_7","text":"object class data.frame 105 rows 3 columns.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_horizontal.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: Attribute(s) naming function. — dat_col_names_horizontal","title":"Title: Attribute(s) naming function. — dat_col_names_horizontal","text":"function used name attribute(s). Attribute(s) names, case, equivalent well labels found microplate reader. attribute sample loaded row - column 1 named A1. short, function takes clean data frame returns attribute names match FLUOstar plate layout often presented Excel file.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_horizontal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: Attribute(s) naming function. — dat_col_names_horizontal","text":"","code":"dat_col_names_horizontal(dat = NULL, df, rows_used = NULL, cols_used = NULL)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_horizontal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: Attribute(s) naming function. — dat_col_names_horizontal","text":"dat string (\"dat_1.dat\") file found within present working directory (pwd) path pointing directly \".dat\" file. df data frame requires attribute labels. rows_used character vector indicating rows tuples used microplate (usually 96-well microplate). Initialized NULL. cols_used numeric vector indicating plate columns attributes used. Initialized NULL.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_horizontal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: Attribute(s) naming function. — dat_col_names_horizontal","text":"Returns character numeric vector attribute(s) names normalized data frame.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_horizontal.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: Attribute(s) naming function. — dat_col_names_horizontal","text":"function designed avoid use stringr. function designed name attributes read direction specified horizontal.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_horizontal.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: Attribute(s) naming function. — dat_col_names_horizontal","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_horizontal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: Attribute(s) naming function. — dat_col_names_horizontal","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale(nocomma_dat, tnp=3, cycles=40) n = c('A','B','C') sample_col_names <- dat_col_names_horizontal(dat=fpath,resampled_scaled, n)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_optimus.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: Attribute(s) naming function. — dat_col_names_optimus","title":"Title: Attribute(s) naming function. — dat_col_names_optimus","text":"function used name attribute(s). Attribute(s) names, case, equivalent well labels found microplate reader. attribute sample loaded row - column 1 named A1. short, function takes clean data frame returns attribute names match FLUOstar plate layout often presented Excel file.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_optimus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: Attribute(s) naming function. — dat_col_names_optimus","text":"","code":"dat_col_names_optimus(   dat = NULL,   df,   rows_used = NULL,   cols_used = NULL,   user_specific_labels = NULL,   read_direction = NULL )"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_optimus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: Attribute(s) naming function. — dat_col_names_optimus","text":"dat string (\"dat_1.dat\") file found within present working directory (pwd) path pointing directly \".dat\" file. df data frame requires attribute labels. rows_used character vector indicating rows tuples used microplate (usually 96-well microplate). Initialized NULL. cols_used numeric vector indicating plate columns attributes used. Initialized NULL. user_specific_labels character vector user manually enters used microplate wells based FLUOstar plate layout. read_direction string input two choices, “vertical” “horizontal.” user indicates “vertical” user intends final data frame samples arranged sample type triplets (A1, B1, C1, A1, B1, C1) “horizontal” user intends final data frame samples","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_optimus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: Attribute(s) naming function. — dat_col_names_optimus","text":"Returns character numeric vector attribute(s) names normalized data frame.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_optimus.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: Attribute(s) naming function. — dat_col_names_optimus","text":"Users advised input rows used won’t penalized . user provides rows used, attribute names generated user. user must check ensure names match microplate layout. user can leave columns used NULL user loaded samples column 1 sequence. user fails load sequence first position, user must provide numeric vector columns used. instance, user skips columns, user prompted interact program order ensure final data frame correct attribute names. user can bypass rows used columns used parameters user supplies manually created character vector wells used experiment. read direction parameter used determine presentation samples final data frame.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_optimus.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: Attribute(s) naming function. — dat_col_names_optimus","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_optimus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: Attribute(s) naming function. — dat_col_names_optimus","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale(nocomma_dat, tnp=3, cycles=40) n = c('A','B','C') sample_col_names <- dat_col_names_optimus(dat = fpath, resampled_scaled, n)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_prime.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: Attribute(s) naming function. — dat_col_names_prime","title":"Title: Attribute(s) naming function. — dat_col_names_prime","text":"function used name attribute(s). Attribute(s) names, case, equivalent well labels found microplate reader. attribute sample loaded row - column 1 named A1. short, function takes clean data frame returns attribute names match FLUOstar plate layout often presented Excel file.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_prime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: Attribute(s) naming function. — dat_col_names_prime","text":"","code":"dat_col_names_prime(   dat = NULL,   df,   rows_used = NULL,   cols_used = NULL,   user_specific_labels = NULL )"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_prime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: Attribute(s) naming function. — dat_col_names_prime","text":"dat string (\"dat_1.dat\") file found within present working directory (pwd) path pointing directly \".dat\" file. df data frame requires attribute labels. rows_used character vector indicating rows tuples used microplate (usually 96-well microplate). Initialized NULL. cols_used numeric vector indicating plate columns attributes used. Initialized NULL. user_specific_labels character vector user manually enters used microplate wells based FLUOstar plate layout.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_prime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: Attribute(s) naming function. — dat_col_names_prime","text":"Returns character vector attribute(s) names normalized data frame.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_prime.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: Attribute(s) naming function. — dat_col_names_prime","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_prime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: Attribute(s) naming function. — dat_col_names_prime","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale(nocomma_dat, tnp=3, cycles=40) n = c('A','B','C') sample_col_names <- dat_col_names_prime(dat = fpath, resampled_scaled, n)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_rigid.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: Attribute(s) naming function. — dat_col_names_rigid","title":"Title: Attribute(s) naming function. — dat_col_names_rigid","text":"function used name attribute(s). Attribute(s) names, case, equivalent well labels found microplate reader. attribute sample loaded row - column 1 named A1. short, function takes clean data frame returns attribute names match FLUOstar plate layout often presented Excel file.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_rigid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: Attribute(s) naming function. — dat_col_names_rigid","text":"","code":"dat_col_names_rigid(   dat = NULL,   df,   rows_used = NULL,   cols_used = NULL,   user_specific_labels = NULL,   read_direction = NULL )"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_rigid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: Attribute(s) naming function. — dat_col_names_rigid","text":"dat string (\"dat_1.dat\") file found within present working directory (pwd) path pointing directly \".dat\" file. df data frame requires attribute labels. rows_used character vector indicating rows tuples used microplate (usually 96-well microplate). Initialized NULL. cols_used numeric vector indicating plate columns attributes used. Initialized NULL. user_specific_labels character vector user manually enters used microplate wells based FLUOstar plate layout. read_direction string input two choices, “vertical” “horizontal.” user indicates “vertical” user intends final data frame samples arranged sample type triplets (A1, B1, C1, A1, B1, C1) “horizontal” user intends final data frame samples arranged clusters per sample type (A1, A2, A3, B1, B2, B3).","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_rigid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: Attribute(s) naming function. — dat_col_names_rigid","text":"Returns character vector attribute(s) names normalized data frame.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_rigid.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: Attribute(s) naming function. — dat_col_names_rigid","text":"Users advised input rows used won’t penalized . user provides rows used, attribute names generated user. user must check ensure names match microplate layout. user can leave columns used NULL user loaded samples column 1 sequence. user fails load sequence first position, user must provide numeric vector columns used. instance, user skips columns, user prompted interact program order ensure final data frame correct attribute names. user can bypass rows used columns used parameters user supplies manually created character vector wells used experiment. read direction parameter used determine presentation samples final data frame. naming function returns character vector hence rigid suffix.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_rigid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: Attribute(s) naming function. — dat_col_names_rigid","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/dat_col_names_rigid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: Attribute(s) naming function. — dat_col_names_rigid","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale(nocomma_dat, tnp=3, cycles=40) n = c('A','B','C') sample_col_names <- dat_col_names_rigid(dat = fpath, resampled_scaled, n)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/decimal_scaling.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A decimal scaling function (a machine learning tool). — decimal_scaling","title":"Title: A decimal scaling function (a machine learning tool). — decimal_scaling","text":"Title: decimal scaling function (machine learning tool).","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/decimal_scaling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A decimal scaling function (a machine learning tool). — decimal_scaling","text":"","code":"decimal_scaling(x)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/decimal_scaling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A decimal scaling function (a machine learning tool). — decimal_scaling","text":"x Attribute value(s).","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/decimal_scaling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A decimal scaling function (a machine learning tool). — decimal_scaling","text":"decimal scaled value applied single value decimal scaled attribute(s).","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/decimal_scaling.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: A decimal scaling function (a machine learning tool). — decimal_scaling","text":"lapply function required apply function across several attributes. normalization function, data obtained decimal scaling function exists sliding scale used meaningful analysis.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/decimal_scaling.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Title: A decimal scaling function (a machine learning tool). — decimal_scaling","text":"https://www.statology.org/--normalize-data--r/","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/decimal_scaling.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A decimal scaling function (a machine learning tool). — decimal_scaling","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/decimal_scaling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A decimal scaling function (a machine learning tool). — decimal_scaling","text":"","code":"test_df <- as.data.frame(c(seq(40))) colnames(test_df) <- \"test\" test_df_norm <- lapply(test_df[1:ncol(test_df)], decimal_scaling)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A fluorescence quantification Quality Control (QC) function. — fluor_threshold_check","title":"Title: A fluorescence quantification Quality Control (QC) function. — fluor_threshold_check","text":"function designed check fluorescence values exceed upper limit (2^15 32768) fall lower limit (2^11 2048). Fluorescence values exceed thresholds considered noisy lead incorrect interpretation analysis results.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A fluorescence quantification Quality Control (QC) function. — fluor_threshold_check","text":"","code":"fluor_threshold_check(clean_df, fun = NA)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A fluorescence quantification Quality Control (QC) function. — fluor_threshold_check","text":"clean_df cleaned data frame. fun parameter used Boolean expressions.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A fluorescence quantification Quality Control (QC) function. — fluor_threshold_check","text":"polite warning message data analyst researcher.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: A fluorescence quantification Quality Control (QC) function. — fluor_threshold_check","text":"Experimental issues investigated high low fluorescence values. common experimental issues arise ACMA concentrations tolerated range. Based experience, ACMA concentrations 2 5 Micromolar suffice get fluorescence values within tolerance threshold. ACMA concentrations low 0.2 Micromolar high 20 Micromolar proven problematic based research experience. second issue linked FLUOstar instrument revolves around setting right “gain” ensure right level sensitivity machine readings. high “gain” setting results increased machine sensitivity even right ACMA concentrations vice versa. short, want machine primed read exactly feed , , less. function provides attribute(s) tuple(s) values need investigation. deductions obtained experimental hiccups characterization liposome flux assay system.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A fluorescence quantification Quality Control (QC) function. — fluor_threshold_check","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A fluorescence quantification Quality Control (QC) function. — fluor_threshold_check","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale(nocomma_dat, tnp=3, cycles=40) resampled_scaled <- resampled_scaled[,c(1:4)] fluor_threshold_check(resampled_scaled)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A missing value (NA) Quality Control (QC) function. — fluor_threshold_check_na","title":"Title: A missing value (NA) Quality Control (QC) function. — fluor_threshold_check_na","text":"function designed check missing values data frame.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A missing value (NA) Quality Control (QC) function. — fluor_threshold_check_na","text":"","code":"fluor_threshold_check_na(clean_df, fun = NA)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A missing value (NA) Quality Control (QC) function. — fluor_threshold_check_na","text":"clean_df cleaned data frame. fun parameter used Boolean expressions.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A missing value (NA) Quality Control (QC) function. — fluor_threshold_check_na","text":"polite warning message data analyst researcher.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check_na.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A missing value (NA) Quality Control (QC) function. — fluor_threshold_check_na","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A missing value (NA) Quality Control (QC) function. — fluor_threshold_check_na","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) fluor_threshold_check_na(nocomma_dat)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A fluorescence quantification Quality Control (QC) function. — fluor_threshold_check_raw","title":"Title: A fluorescence quantification Quality Control (QC) function. — fluor_threshold_check_raw","text":"function designed check fluorescence values exceed upper limit (2^15 32768) fall lower limit (2^11 2048). Fluorescence values exceed thresholds considered noisy lead incorrect interpretation analysis results.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A fluorescence quantification Quality Control (QC) function. — fluor_threshold_check_raw","text":"","code":"fluor_threshold_check_raw(clean_df, fun = NA)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A fluorescence quantification Quality Control (QC) function. — fluor_threshold_check_raw","text":"clean_df cleaned data frame. fun parameter used Boolean expressions.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A fluorescence quantification Quality Control (QC) function. — fluor_threshold_check_raw","text":"polite warning message data analyst researcher.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check_raw.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: A fluorescence quantification Quality Control (QC) function. — fluor_threshold_check_raw","text":"function works different type data frame similar manner @seealso fluor_threshold_check().","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check_raw.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A fluorescence quantification Quality Control (QC) function. — fluor_threshold_check_raw","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/fluor_threshold_check_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A fluorescence quantification Quality Control (QC) function. — fluor_threshold_check_raw","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) fluor_threshold_check_raw(nocomma_dat) #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds #> Warning: 🐷🐫 #> Warning: Crikee, some values in your original data violate thresholds"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/generic_identifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to append a generic identifier attribute to any data frame, but users supply a name for said attribute. — generic_identifier","title":"Title: A function to append a generic identifier attribute to any data frame, but users supply a name for said attribute. — generic_identifier","text":"function creates attribute seq(numrows) step size 1, user provides attribute name.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/generic_identifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to append a generic identifier attribute to any data frame, but users supply a name for said attribute. — generic_identifier","text":"","code":"generic_identifier(numrows, col_name)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/generic_identifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to append a generic identifier attribute to any data frame, but users supply a name for said attribute. — generic_identifier","text":"numrows number rows user intends created data frame. col_name desired attribute name.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/generic_identifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to append a generic identifier attribute to any data frame, but users supply a name for said attribute. — generic_identifier","text":"user-named single attribute data frame nrow = numrows.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/generic_identifier.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to append a generic identifier attribute to any data frame, but users supply a name for said attribute. — generic_identifier","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/generic_identifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to append a generic identifier attribute to any data frame, but users supply a name for said attribute. — generic_identifier","text":"","code":"generic_identifier(40, col_name=\"Cycle_No\") #>    Cycle_No #> 1         1 #> 2         2 #> 3         3 #> 4         4 #> 5         5 #> 6         6 #> 7         7 #> 8         8 #> 9         9 #> 10       10 #> 11       11 #> 12       12 #> 13       13 #> 14       14 #> 15       15 #> 16       16 #> 17       17 #> 18       18 #> 19       19 #> 20       20 #> 21       21 #> 22       22 #> 23       23 #> 24       24 #> 25       25 #> 26       26 #> 27       27 #> 28       28 #> 29       29 #> 30       30 #> 31       31 #> 32       32 #> 33       33 #> 34       34 #> 35       35 #> 36       36 #> 37       37 #> 38       38 #> 39       39 #> 40       40"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/ggplot_tnp.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A Visualization function. — ggplot_tnp","title":"Title: A Visualization function. — ggplot_tnp","text":"visualization function using ggplot2.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/ggplot_tnp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A Visualization function. — ggplot_tnp","text":"","code":"ggplot_tnp(df, x, y_list, xlim, ylim, xlab = NULL, ylab = NULL, title = NULL)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/ggplot_tnp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A Visualization function. — ggplot_tnp","text":"df clean data frame attributes tuples containing mixture samples. x X-variable often cycle number time. y_list character vector samples need plotted. Often format TNP (Test, Negative, Positive). xlim X-variable scale. ylim Y-variable scale. xlab X axis label. Takes string. ylab Y-axis label. Takes string. title Graph title. Takes string.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/ggplot_tnp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A Visualization function. — ggplot_tnp","text":"nice visual clean normalized data frame.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/ggplot_tnp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A Visualization function. — ggplot_tnp","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/ggplot_tnp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A Visualization function. — ggplot_tnp","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- normfluodat(fpath,3,40, rows_used = c('A','B','C'), norm_scale = 'one') #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 1 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 2 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 3 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 4 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 5 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 6 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 7 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 8 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 9 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 10 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 11 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 12 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 13 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 14 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 15 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 16 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 17 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 18 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 19 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 20 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 21 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 22 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 23 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 24 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 25 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 26 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 27 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 28 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 29 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 30 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 31 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 32 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 33 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 34 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 35 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 36 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 37 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 38 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 39 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 40 yvars <- c(\"A1\",\"B1\",\"C1\") xvar <- c(\"Cycle_Number\", \"Time\") xl <- c(0,40) yl <- c(0,1) ggplot_tnp(dat_df,xvar,yvars,xl,yl,xlab='Cycle_Number',ylab='Normalized Fluorescence',title='LFA') #> Error in ggplot_tnp(dat_df, xvar, yvars, xl, yl, xlab = \"Cycle_Number\",     ylab = \"Normalized Fluorescence\", title = \"LFA\"): unused arguments (xlab = \"Cycle_Number\", ylab = \"Normalized Fluorescence\", title = \"LFA\")"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_214.html","id":null,"dir":"Reference","previous_headings":"","what":"liposomes_214. — liposomes_214","title":"liposomes_214. — liposomes_214","text":"FLUOstar .dbf file wide format unable use data analysis.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_214.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"liposomes_214. — liposomes_214","text":"","code":"liposomes_214"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_214.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"liposomes_214. — liposomes_214","text":"object class data.frame 11 rows 52 columns.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_215.html","id":null,"dir":"Reference","previous_headings":"","what":"liposomes_215. — liposomes_215","title":"liposomes_215. — liposomes_215","text":"FLUOstar .dbf file wide format unable use data analysis.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_215.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"liposomes_215. — liposomes_215","text":"","code":"liposomes_215"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_215.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"liposomes_215. — liposomes_215","text":"object class data.frame 11 rows 52 columns.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_216.html","id":null,"dir":"Reference","previous_headings":"","what":"liposomes_216. — liposomes_216","title":"liposomes_216. — liposomes_216","text":"FLUOstar .dbf file wide format unable use data analysis.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_216.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"liposomes_216. — liposomes_216","text":"","code":"liposomes_216"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_216.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"liposomes_216. — liposomes_216","text":"object class data.frame 8 rows 52 columns.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_218.html","id":null,"dir":"Reference","previous_headings":"","what":"liposomes_218. — liposomes_218","title":"liposomes_218. — liposomes_218","text":"FLUOstar .dbf file wide format unable use data analysis.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_218.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"liposomes_218. — liposomes_218","text":"","code":"liposomes_218"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_218.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"liposomes_218. — liposomes_218","text":"object class data.frame 11 rows 52 columns.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_221.html","id":null,"dir":"Reference","previous_headings":"","what":"liposomes_221. — liposomes_221","title":"liposomes_221. — liposomes_221","text":"FLUOstar .dbf file wide format unable use data analysis.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_221.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"liposomes_221. — liposomes_221","text":"","code":"liposomes_221"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_221.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"liposomes_221. — liposomes_221","text":"object class data.frame 38 rows 52 columns.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_227.html","id":null,"dir":"Reference","previous_headings":"","what":"liposomes_227. — liposomes_227","title":"liposomes_227. — liposomes_227","text":"FLUOstar .dbf file wide format unable use data analysis.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_227.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"liposomes_227. — liposomes_227","text":"","code":"liposomes_227"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/liposomes_227.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"liposomes_227. — liposomes_227","text":"object class data.frame 29 rows 52 columns.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/log_transformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A log transformation function. — log_transformation","title":"Title: A log transformation function. — log_transformation","text":"Title: log transformation function.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/log_transformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A log transformation function. — log_transformation","text":"","code":"log_transformation(x)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/log_transformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A log transformation function. — log_transformation","text":"x Attribute value(s).","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/log_transformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A log transformation function. — log_transformation","text":"log-transformed value applied single value attribute log-transformed values.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/log_transformation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: A log transformation function. — log_transformation","text":"lapply function required apply function across several attributes.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/log_transformation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Title: A log transformation function. — log_transformation","text":"https://www.statology.org/--normalize-data--r/","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/log_transformation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A log transformation function. — log_transformation","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/log_transformation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A log transformation function. — log_transformation","text":"","code":"test_df <- as.data.frame(c(seq(40))) colnames(test_df) <- \"test\" test_df_norm <- lapply(test_df[1:ncol(test_df)], log_transformation)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/min_max_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: Min-Max normalization on a 0-1 scale. — min_max_norm","title":"Title: Min-Max normalization on a 0-1 scale. — min_max_norm","text":"Title: Min-Max normalization 0-1 scale.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/min_max_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: Min-Max normalization on a 0-1 scale. — min_max_norm","text":"","code":"min_max_norm(x)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/min_max_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: Min-Max normalization on a 0-1 scale. — min_max_norm","text":"x Attribute value(s).","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/min_max_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: Min-Max normalization on a 0-1 scale. — min_max_norm","text":"normalized value (0 1) applied single value normalized attribute values 0 1.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/min_max_norm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: Min-Max normalization on a 0-1 scale. — min_max_norm","text":"lapply function required apply function across several attributes.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/min_max_norm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Title: Min-Max normalization on a 0-1 scale. — min_max_norm","text":"https://www.statology.org/--normalize-data--r/","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/min_max_norm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: Min-Max normalization on a 0-1 scale. — min_max_norm","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/min_max_norm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: Min-Max normalization on a 0-1 scale. — min_max_norm","text":"","code":"test_df <- as.data.frame(c(seq(40))) colnames(test_df) <- \"test\" test_df_norm <- lapply(test_df[1:ncol(test_df)], min_max_norm)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/min_max_norm_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: Min-Max normalization on a 0-100 scale. — min_max_norm_percent","title":"Title: Min-Max normalization on a 0-100 scale. — min_max_norm_percent","text":"Title: Min-Max normalization 0-100 scale.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/min_max_norm_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: Min-Max normalization on a 0-100 scale. — min_max_norm_percent","text":"","code":"min_max_norm_percent(x)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/min_max_norm_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: Min-Max normalization on a 0-100 scale. — min_max_norm_percent","text":"x Attribute value(s).","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/min_max_norm_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: Min-Max normalization on a 0-100 scale. — min_max_norm_percent","text":"normalized value (0 100) applied single value normalized attribute values 0 100.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/min_max_norm_percent.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: Min-Max normalization on a 0-100 scale. — min_max_norm_percent","text":"lapply function required apply function across several attributes.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/min_max_norm_percent.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Title: Min-Max normalization on a 0-100 scale. — min_max_norm_percent","text":"https://www.statology.org/--normalize-data--r/","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/min_max_norm_percent.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: Min-Max normalization on a 0-100 scale. — min_max_norm_percent","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/min_max_norm_percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: Min-Max normalization on a 0-100 scale. — min_max_norm_percent","text":"","code":"test_df <- as.data.frame(c(seq(40))) colnames(test_df) <- \"test\" test_df_norm <- lapply(test_df[1:ncol(test_df)], min_max_norm_percent)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodat.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodat","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodat","text":"simplest case scenario entails inputting name directory DAT file string, number rows denoted tnp (test, negative, positive) parameter, number cycles (selected user running FLUOstar instrument). program takes three baseline parameters, performs cleaning normalization DAT file, appends attribute called “Cycle_Number” normalized data frame.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodat","text":"","code":"normfluodat(   dat,   tnp,   cycles,   rows_used = NULL,   cols_used = NULL,   user_specific_labels = NULL,   read_direction = NULL,   norm_scale = NULL )"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodat","text":"dat string (\"dat_1.dat\") file found within present working directory (pwd) path pointing directly \".dat\" file. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument. rows_used character vector rows used; ru = c('','B','C'). cols_used numeric vector columns used; cu = c(1,2,3). user_specific_labels character vector manually prepared user denote wells used microplate reader; usl = c('A1','B1','C1'). read_direction string input two choices, “vertical” “horizontal.” user indicates “vertical” user intends final data frame samples arranged sample type triplets (A1, B1, C1, A1, B1, C1) “horizontal” user intends final data frame samples arranged clusters per sample type (A1, A2, A3, B1, B2, B3). norm_scale parameter takes sub-parameters: 'raw’ , hundred’ , 'one’ , 'z-score' , 'decimal’ , denotes normalization type scale; Initialized NULL.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodat","text":"normalized data frame appended \"Cycle_Number\" attribute. “Cycle_Number” attribute X-variable.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodat","text":"function single-step function leveraging several subordinate functions. assumed user 3 baseline parameters get function working. Users must double-check attribute names ensure end accurate results.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodat","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodat","text":"","code":"fpath <- system.file(\"extdata\", \"dat_4.dat\", package = \"normfluodbf\", mustWork = TRUE) normalized_fluo_dat <- normfluodat(dat=fpath, tnp = 3, cycles = 40) #> The user is advised to input a character vector of rows used"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodatfull.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodatfull","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodatfull","text":"simplest case scenario entails inputting name directory DAT file string, number rows denoted tnp (test, negative, positive) parameter, number cycles (selected user running FLUOstar instrument). program takes three baseline parameters, performs cleaning normalization DAT file, appends attribute called “Cycle_Number” normalized data frame.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodatfull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodatfull","text":"","code":"normfluodatfull(   dat,   tnp,   cycles,   rows_used = NULL,   cols_used = NULL,   user_specific_labels = NULL,   read_direction = NULL,   norm_scale = NULL,   na_omit = NULL )"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodatfull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodatfull","text":"dat string (\"dat_1.dat\") file found within present working directory (pwd) path pointing directly \".dat\" file. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument. rows_used character vector rows used; ru = c('','B','C'). cols_used numeric vector columns used; cu = c(1,2,3). user_specific_labels character vector manually prepared user denote wells used microplate reader; usl = c('A1','B1','C1'). read_direction string input two choices, “vertical” “horizontal.” user indicates “vertical” user intends final data frame samples arranged sample type triplets (A1, B1, C1, A1, B1, C1) “horizontal” user intends final data frame samples arranged clusters per sample type (A1, A2, A3, B1, B2, B3). norm_scale parameter takes sub-parameters: 'raw’ , hundred’ , 'one’ , 'z-score' , 'decimal’ , denotes normalization type scale; Initialized NULL. na_omit Takes string \"yes\" \"\".","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodatfull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodatfull","text":"normalized data frame appended \"Cycle_Number\" attribute. “Cycle_Number” attribute X-variable.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodatfull.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodatfull","text":"function single-step function leveraging several subordinate functions. assumed user 3 baseline parameters get function working. Users must double-check attribute names ensure end accurate results.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodatfull.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodatfull","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodatfull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodatfull","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) normalized_fluo_dat <- normfluodatfull(dat=fpath, tnp = 3, cycles = 40) #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 1 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 2 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 3 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 4 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 5 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 6 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 7 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 8 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 9 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 10 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 11 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 12 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 13 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 14 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 15 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 16 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 17 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 18 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 19 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 20 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 21 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 22 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 23 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 24 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 25 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 26 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 27 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 28 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 29 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 30 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 31 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 32 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 33 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 34 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 35 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 36 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 37 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 38 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 39 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 40 #> The user is advised to input a character vector of rows used"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodatlite.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodatlite","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodatlite","text":"simplest case scenario entails inputting name directory DAT file string, number rows denoted tnp (test, negative, positive) parameter, number cycles (selected user running FLUOstar instrument). program takes three baseline parameters, performs cleaning normalization DAT file, appends attribute called “Cycle_Number” normalized data frame.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodatlite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodatlite","text":"","code":"normfluodatlite(   dat,   tnp,   cycles,   rows_used = NULL,   cols_used = NULL,   user_specific_labels = NULL,   read_direction = NULL,   norm_scale = NULL )"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodatlite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodatlite","text":"dat string (\"dat_1.dat\") file found within present working directory (pwd) path pointing directly \".dat\" file. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument. rows_used character vector rows used; ru = c('','B','C'). cols_used numeric vector columns used; cu = c(1,2,3). user_specific_labels character vector manually prepared user denote wells used microplate reader; usl = c('A1','B1','C1'). read_direction string input two choices, “vertical” “horizontal.” user indicates “vertical” user intends final data frame samples arranged sample type triplets (A1, B1, C1, A1, B1, C1) “horizontal” user intends final data frame samples arranged clusters per sample type (A1, A2, A3, B1, B2, B3). norm_scale parameter takes sub-parameters: 'raw’ , hundred’ , 'one’ , 'z-score' , 'decimal’ , denotes normalization type scale; Initialized NULL.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodatlite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodatlite","text":"normalized data frame appended \"Cycle_Number\" attribute. “Cycle_Number” attribute X-variable.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodatlite.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodatlite","text":"function single-step function leveraging several subordinate functions. assumed user 3 baseline parameters get function working. Users must double-check attribute names ensure end accurate results.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodatlite.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodatlite","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodatlite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodatlite","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) normalized_fluo_dat <- normfluodatlite(dat=fpath, tnp = 3, cycles = 40) #> The user is advised to input a character vector of rows used #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 1 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 2 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 3 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 4 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 5 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 6 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 7 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 8 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 9 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 10 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 11 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 12 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 13 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 14 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 15 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 16 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 17 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 18 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 19 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 20 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 21 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 22 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 23 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 24 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 25 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 26 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 27 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 28 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 29 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 30 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 31 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 32 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 33 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 34 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 35 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 36 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 37 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 38 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 39 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 40"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodat_base.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodat_base","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodat_base","text":"simplest case scenario entails inputting name directory DAT file string, number rows denoted tnp (test, negative, positive) parameter, number cycles (selected user running FLUOstar instrument). program takes three baseline parameters, performs cleaning normalization DAT file, appends attribute called “Cycle_Number” normalized data frame.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodat_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodat_base","text":"","code":"normfluodat_base(   dat,   tnp,   cycles,   rows_used = NULL,   cols_used = NULL,   user_specific_labels = NULL,   read_direction = NULL,   norm_scale = NULL,   na_omit = NULL )"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodat_base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodat_base","text":"dat string (\"dat_1.dat\") file found within present working directory (pwd) path pointing directly \".dat\" file. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument. rows_used character vector rows used; ru = c('','B','C'). cols_used numeric vector columns used; cu = c(1,2,3). user_specific_labels character vector manually prepared user denote wells used microplate reader; usl = c('A1','B1','C1'). read_direction string input two choices, “vertical” “horizontal.” user indicates “vertical” user intends final data frame samples arranged sample type triplets (A1, B1, C1, A1, B1, C1) “horizontal” user intends final data frame samples arranged clusters per sample type (A1, A2, A3, B1, B2, B3). norm_scale parameter takes sub-parameters: 'raw’ , hundred’ , 'one’ , 'z-score' , 'decimal’ , denotes normalization type scale; Initialized NULL. na_omit Takes string \"yes\" \"\".","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodat_base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodat_base","text":"normalized data frame appended \"Cycle_Number\" attribute. “Cycle_Number” attribute X-variable.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodat_base.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodat_base","text":"function single-step function leveraging several subordinate functions. assumed user 3 baseline parameters get function working. Users must double-check attribute names ensure end accurate results.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodat_base.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodat_base","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluodat_base.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluodat_base","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) normalized_fluo_dat <- normfluodat_base(dat=fpath, tnp = 3, cycles = 40) #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 1 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 2 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 3 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 4 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 5 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 6 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 7 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 8 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 9 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 10 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 11 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 12 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 13 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 14 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 15 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 16 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 17 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 18 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 19 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 20 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 21 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 22 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 23 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 24 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 25 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 26 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 27 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 28 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 29 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 30 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 31 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 32 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 33 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 34 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 35 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 36 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 37 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 38 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 39 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 40 #> The user is advised to input a character vector of rows used"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluordat.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluordat","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluordat","text":"simplest case scenario entails inputting name directory DAT file string, number rows denoted tnp (test, negative, positive) parameter, number cycles (selected user running FLUOstar instrument). program takes three baseline parameters, performs cleaning normalization DAT file, appends attribute called “Cycle_Number” normalized data frame.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluordat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluordat","text":"","code":"normfluordat(   dat,   tnp,   cycles,   rows_used = NULL,   cols_used = NULL,   user_specific_labels = NULL,   read_direction = NULL,   na_omit = NULL )"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluordat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluordat","text":"dat string (\"dat_1.dat\") file found within present working directory (pwd) path pointing directly \".dat\" file. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument. rows_used character vector rows used; ru = c('','B','C'). cols_used numeric vector columns used; cu = c(1,2,3). user_specific_labels character vector manually prepared user denote wells used microplate reader; usl = c('A1','B1','C1'). read_direction string input two choices, “vertical” “horizontal.” user indicates “vertical” user intends final data frame samples arranged sample type triplets (A1, B1, C1, A1, B1, C1) “horizontal” user intends final data frame samples. na_omit Takes string \"yes\" \"\".","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluordat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluordat","text":"normalized data frame appended \"Cycle_Number\" attribute. “Cycle_Number” attribute X-variable.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluordat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluordat","text":"function less optimized space time complexities @seealso normfluodat(). real-time difference optimization noticeable. function also takes less parameters optimized version function. Use @seealso normfluodat() better approximation attribute names.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluordat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluordat","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluordat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: Cleans and normalizes DAT files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — normfluordat","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) normalized_fluo_dat <- normfluordat(dat=fpath, tnp = 3, cycles = 40) #> The User is advised to input a character vector of rows used #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 1 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 2 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 3 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 4 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 5 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 6 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 7 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 8 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 9 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 10 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 11 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 12 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 13 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 14 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 15 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 16 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 17 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 18 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 19 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 20 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 21 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 22 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 23 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 24 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 25 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 26 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 27 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 28 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 29 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 30 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 31 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 32 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 33 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 34 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 35 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 36 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 37 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 38 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 39 #> 🐷🐫 #> YIKES, value < 2^11, Watch in future experimental designs column: 27 row: 40"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluordbf.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: Cleans and Normalizes DBF files obtained from experiments using the FLUOstar microplate reader. — normfluordbf","title":"Title: Cleans and Normalizes DBF files obtained from experiments using the FLUOstar microplate reader. — normfluordbf","text":"Input path \".dbf\" file obtained FLUOstar microplate (usually 96-well microplate) reader; function create data frame, clean data frame, normalize data frame, append \"Cycle_Number\" column return data frame ready analysis. importantly, function single_step function. Also, function can extended \".dbf\" files follow format function designed; totally users' discretion.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluordbf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: Cleans and Normalizes DBF files obtained from experiments using the FLUOstar microplate reader. — normfluordbf","text":"","code":"normfluordbf(file = NULL, norm_scale = NULL, transformed = NULL, fun = NA, ...)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluordbf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: Cleans and Normalizes DBF files obtained from experiments using the FLUOstar microplate reader. — normfluordbf","text":"file string (\"liposomes_xxx.dbf\") file found within present working directory (pwd) path pointing directly \".dbf\" file, FLUOstar experiments. norm_scale parameter can taken 'hundred', 'one', 'z-score' denotes normalization type; Initialized NULL. transformed parameter can take 'log' denotes logarithmic box-cox transformation; Initialized NULL. fun variable defined NA, used boolean expressions manipulation. ... container object can used capture extra variables needed.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluordbf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: Cleans and Normalizes DBF files obtained from experiments using the FLUOstar microplate reader. — normfluordbf","text":"normalized data frame appended \"Cycle_Number\" attribute.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluordbf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: Cleans and Normalizes DBF files obtained from experiments using the FLUOstar microplate reader. — normfluordbf","text":"Re-nomenclature norm_tidy_dbf appropriate name facilitates function utilization. Users can continue old name (\"norm_tidy_dbf\") better name opinion.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluordbf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: Cleans and Normalizes DBF files obtained from experiments using the FLUOstar microplate reader. — normfluordbf","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/normfluordbf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: Cleans and Normalizes DBF files obtained from experiments using the FLUOstar microplate reader. — normfluordbf","text":"","code":"fpath <- system.file(\"extdata\", \"liposomes_214.dbf\", package = \"normfluodbf\", mustWork = TRUE) normalized_dbf <- normfluordbf(file=fpath, norm_scale = 'raw') #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 40 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 40 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 40 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 40 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 40 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 40 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 40 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 40 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 40"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_applier.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A normalization applier built on lapply. — norm_applier","title":"Title: A normalization applier built on lapply. — norm_applier","text":"Applies function list attributes.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_applier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A normalization applier built on lapply. — norm_applier","text":"","code":"norm_applier(df, norm_scale = c(\"one\", \"hundred\", \"z-score\", \"raw\", \"decimal\"))"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_applier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A normalization applier built on lapply. — norm_applier","text":"df data frame. norm_scale parameter takes sub-parameters: 'raw’ , hundred’ , 'one’ , 'z-score' , 'decimal’ , denotes normalization type scale.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_applier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A normalization applier built on lapply. — norm_applier","text":"data frame attribute values obtained applied function using lapply.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_applier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A normalization applier built on lapply. — norm_applier","text":"","code":"test_df <- as.data.frame(c(seq(40))) colnames(test_df) <- \"test\" test_df_norm <- norm_applier(test_df,norm_scale = 'one')"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_tidy_dbf.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: Cleans and Normalizes DBF files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — norm_tidy_dbf","title":"Title: Cleans and Normalizes DBF files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — norm_tidy_dbf","text":"simplest function utilization scenario entails input path DBF file obtained FLUOstar microplate (usually 96-well microplate) reader; single step, function create data frame, clean data frame, normalize data frame, append \"Cycle_Number\" attribute, perform adjustment “time” attribute return data frame ready analysis. Since initial publication package, several changes made improve user experience give user options fine-tune output package meet users’ aesthetic needs. Users decide move past simplest utility scenario given options customize output based users’ needs. Notably, several normalization sub-parameters provided package yields different outputs based user used seeing. Just FLUOstar instrument built handle array assays, function designed multi-dimensional (meaning can handle data DBF extension assay types), condition data assay types liposome flux assays follow data format package designed handle. course, users package advised pre-analyze DBF files assay types ensure compliant package (compliance scenario simple meaning DBF files assays like DBF files liposome flux assays).","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_tidy_dbf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: Cleans and Normalizes DBF files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — norm_tidy_dbf","text":"","code":"norm_tidy_dbf(   file = NULL,   norm_scale = NULL,   transformed = NULL,   fun = NA,   ... )"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_tidy_dbf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: Cleans and Normalizes DBF files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — norm_tidy_dbf","text":"file string (\"liposomes_xxx.dbf\") file found within present working directory (pwd) path pointing directly \".dbf\" file. norm_scale parameter takes sub-parameters: 'raw’ , hundred’ , 'one’ , 'z-score' , 'decimal’ , denotes normalization type scale; parameter initialized NULL. transformed parameter takes input 'log', denotes logarithmic box-cox transformation; Initialized NULL. fun parameter defined NA used Boolean expressions manipulation. ... abstract placeholder container parameter can used capture extra variables needed.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_tidy_dbf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: Cleans and Normalizes DBF files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — norm_tidy_dbf","text":"normalized data frame appended \"Cycle_Number\" attribute.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_tidy_dbf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: Cleans and Normalizes DBF files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — norm_tidy_dbf","text":"default normalization sub-parameter outputs values 0-1 range. Unless “norm_scale” level specified user, default output 0-1 range. “norm_scale” sub-parameter “decimal” machine-learning tool avoided; also provides advantage basic research analysis output operates sliding scale just like raw data. Logarithmic transformation provides minuscule advantage data analysis /avoided. Backward compatibility maintained updates, issues using package way user used . favorite \"norm_scale\" level \"z-score\" since divides axis negative positive, thus facilitating interpretation.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_tidy_dbf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: Cleans and Normalizes DBF files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — norm_tidy_dbf","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_tidy_dbf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: Cleans and Normalizes DBF files obtained from experiments using the FLUOstar Omega microplate reader (from BMG LABTECH). — norm_tidy_dbf","text":"","code":"fpath <- system.file(\"extdata\", \"liposomes_214.dbf\", package = \"normfluodbf\", mustWork = TRUE) normalized_dbf <- norm_tidy_dbf(file=fpath, norm_scale = 'raw') #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 1 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 2 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 3 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 4 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 5 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 6 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 7 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 8 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 9 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 10 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 11 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 12 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 13 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 14 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 15 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 16 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 17 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 18 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 19 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 20 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 21 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 22 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 23 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 24 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 25 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 26 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 27 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 28 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 29 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 30 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 31 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 32 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 33 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 34 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 35 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 36 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 37 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 38 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 39 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 1 row: 40 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 2 row: 40 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 3 row: 40 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 4 row: 40 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 5 row: 40 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 6 row: 40 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 7 row: 40 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 8 row: 40 #> 🐷🐫🦁 #> YIKES, value > 2^15, Watch in future experimental designs column: 9 row: 40"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_z.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: Z-score standardization or normalization function. — norm_z","title":"Title: Z-score standardization or normalization function. — norm_z","text":"Title: Z-score standardization normalization function.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: Z-score standardization or normalization function. — norm_z","text":"","code":"norm_z(x)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: Z-score standardization or normalization function. — norm_z","text":"x Attribute value(s).","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: Z-score standardization or normalization function. — norm_z","text":"standardized value (Z = N (0,1)) applied single value standardized attribute values (Z = N (0,1)).","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_z.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: Z-score standardization or normalization function. — norm_z","text":"lapply function required apply function across several attributes.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_z.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Title: Z-score standardization or normalization function. — norm_z","text":"https://www.statology.org/--normalize-data--r/","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_z.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: Z-score standardization or normalization function. — norm_z","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/norm_z.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: Z-score standardization or normalization function. — norm_z","text":"","code":"test_df <- as.data.frame(c(seq(40))) colnames(test_df) <- \"test\" test_df_norm <- lapply(test_df[1:ncol(test_df)], norm_z)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/read_dats.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to read multiple DAT files into the R environment. — read_dats","title":"Title: A function to read multiple DAT files into the R environment. — read_dats","text":"function facilitates reading multiple DAT files (lazy loading).","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/read_dats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to read multiple DAT files into the R environment. — read_dats","text":"","code":"read_dats(dat_list)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/read_dats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to read multiple DAT files into the R environment. — read_dats","text":"dat_list DAT list (usually list.files() DAT files found pwd).","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/read_dats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to read multiple DAT files into the R environment. — read_dats","text":"Returns DAT data frames R environment.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/read_dats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to read multiple DAT files into the R environment. — read_dats","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/read_dats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to read multiple DAT files into the R environment. — read_dats","text":"","code":"if (FALSE) { fpath <- system.file(\"extdata\", package = \"normfluodbf\", mustWork = TRUE) setwd(fpath) read_dats(list.files(getwd())) }"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/read_dbfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to read multiple dbfs into the R environment. — read_dbfs","title":"Title: A function to read multiple dbfs into the R environment. — read_dbfs","text":"function facilitates reading multiple dbfs (lazy loading).","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/read_dbfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to read multiple dbfs into the R environment. — read_dbfs","text":"","code":"read_dbfs(dbf_list)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/read_dbfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to read multiple dbfs into the R environment. — read_dbfs","text":"dbf_list dbf list (usually list.files() dbf files found pwd).","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/read_dbfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to read multiple dbfs into the R environment. — read_dbfs","text":"Returns DBF data frames R environment.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/read_dbfs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to read multiple dbfs into the R environment. — read_dbfs","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/read_dbfs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to read multiple dbfs into the R environment. — read_dbfs","text":"","code":"if (FALSE) { fpath <- system.file(\"extdata\", package = \"normfluodbf\", mustWork = TRUE) setwd(fpath) read_dbfs(list.files(getwd())) }"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat","text":"Designed prototype function take single attribute column consisting several samples perform putative resampling yield another data frame separate attribute sample.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat","text":"","code":"resample_dat(df, tnp, cycles)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat","text":"df clean data frame attributes tuples containing mixture samples. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat","text":"new data frame separated samples assigned separate attribute column.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat","text":"","code":"fpath <- system.file(\"extdata\", \"dat_5.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) samples_delineated <- resample_dat(nocomma_dat, tnp=3, cycles=40)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_alt.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_alt","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_alt","text":": Designed prototype function take single tuple row consisting several samples perform putative resampling yield another data frame separate attribute sample.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_alt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_alt","text":"","code":"resample_dat_alt(df, tnp, cycles)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_alt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_alt","text":"df clean data frame attributes tuples containing mixture samples. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_alt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_alt","text":"new data frame separated samples assigned separate attribute column.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_alt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_alt","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_alt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_alt","text":"","code":"fpath <- system.file(\"extdata\", \"dat_5.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) samples_delineated <- resample_dat_alt(nocomma_dat, tnp=3, cycles=40)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale","text":"Creates data frame sample loaded microplate wells separate attribute.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale","text":"","code":"resample_dat_scale(df, tnp, cycles)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale","text":"df clean data frame attributes tuples containing mixture samples. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale","text":"new data frame separated samples assigned separate attribute column.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale","text":"function builds scales- @seealso resample_dat(), hence suffix scale. function less optimized @seealso resample_dat_scale_optimus().","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale","text":"","code":"fpath <- system.file(\"extdata\", \"dat_4.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale(nocomma_dat, tnp=3, cycles=40)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt","text":"function takes tuples rows consisting several samples perform putative resampling yield another data frame separate attribute sample.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt","text":"","code":"resample_dat_scale_alt(df, tnp, cycles, na_omit = NULL)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt","text":"df clean data frame attributes tuples containing mixture samples. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument. na_omit Takes string \"yes\" \"\".","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt","text":"new data frame separated samples assigned separate attribute column.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale_alt(nocomma_dat, tnp=3, cycles=40)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_altv1.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_altv1","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_altv1","text":"function takes tuples rows consisting several samples perform putative resampling yield another data frame separate attribute sample.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_altv1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_altv1","text":"","code":"resample_dat_scale_altv1(df, tnp, cycles)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_altv1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_altv1","text":"df clean data frame attributes tuples containing mixture samples. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_altv1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_altv1","text":"new data frame separated samples assigned separate attribute column.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_altv1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_altv1","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_altv1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_altv1","text":"","code":"fpath <- system.file(\"extdata\", \"dat_4.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale_altv1(nocomma_dat, tnp=3, cycles=40)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_altv2_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_altv2_na","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_altv2_na","text":"function takes tuples rows consisting several samples perform putative resampling yield another data frame separate attribute sample. NA values retained provides control.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_altv2_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_altv2_na","text":"","code":"resample_dat_scale_altv2_na(df, tnp, cycles)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_altv2_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_altv2_na","text":"df clean data frame attributes tuples containing mixture samples. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_altv2_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_altv2_na","text":"new data frame separated samples assigned separate attribute column.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_altv2_na.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_altv2_na","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_altv2_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_altv2_na","text":"","code":"fpath <- system.file(\"extdata\", \"dat_4.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale_altv2_na(nocomma_dat, tnp=3, cycles=40)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_bfv.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_bfv","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_bfv","text":"function takes tuples rows consisting several samples perform putative resampling yield another data frame separate attribute sample.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_bfv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_bfv","text":"","code":"resample_dat_scale_alt_bfv(df, tnp, cycles)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_bfv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_bfv","text":"df clean data frame attributes tuples containing mixture samples. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_bfv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_bfv","text":"new data frame separated samples assigned separate attribute column.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_bfv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_bfv","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_bfv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_bfv","text":"","code":"fpath <- system.file(\"extdata\", \"dat_4.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale_alt_bfv(nocomma_dat, tnp=3, cycles=40)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_bf_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_bf_na","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_bf_na","text":"function takes tuples rows consisting several samples perform putative resampling yield another data frame separate attribute sample.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_bf_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_bf_na","text":"","code":"resample_dat_scale_alt_bf_na(df, tnp, cycles)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_bf_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_bf_na","text":"df clean data frame attributes tuples containing mixture samples. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_bf_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_bf_na","text":"new data frame separated samples assigned separate attribute column.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_bf_na.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_bf_na","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_bf_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_bf_na","text":"","code":"fpath <- system.file(\"extdata\", \"dat_4.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale_alt_bf_na(nocomma_dat, tnp=3, cycles=40)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_cpuint.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_cpuint","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_cpuint","text":"function takes tuples rows consisting several samples perform putative resampling yield another data frame separate attribute sample.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_cpuint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_cpuint","text":"","code":"resample_dat_scale_alt_cpuint(df, tnp, cycles)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_cpuint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_cpuint","text":"df clean data frame attributes tuples containing mixture samples. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_cpuint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_cpuint","text":"new data frame separated samples assigned separate attribute column.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_cpuint.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_cpuint","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_cpuint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_cpuint","text":"","code":"fpath <- system.file(\"extdata\", \"dat_4.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale_alt_cpuint(nocomma_dat, tnp=3, cycles=40)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_na","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_na","text":"function takes tuples rows consisting several samples perform putative resampling yield another data frame separate attribute sample. NA values retained.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_na","text":"","code":"resample_dat_scale_alt_na(df, tnp, cycles)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_na","text":"df clean data frame attributes tuples containing mixture samples. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_na","text":"new data frame separated samples assigned separate attribute column.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_na.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_na","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_alt_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_alt_na","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale_alt_na(nocomma_dat, tnp=3, cycles=40)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_naretainer.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_naretainer","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_naretainer","text":"Creates data frame sample loaded microplate wells separate attribute. NA values retained control.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_naretainer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_naretainer","text":"","code":"resample_dat_scale_naretainer(df, tnp, cycles)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_naretainer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_naretainer","text":"df clean data frame attributes tuples containing mixture samples. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_naretainer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_naretainer","text":"new data frame separated samples assigned separate attribute column.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_naretainer.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_naretainer","text":"function builds scales- @seealso resample_dat(), hence suffix scale. function less optimized @seealso resample_dat_scale_optimus().","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_naretainer.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_naretainer","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_naretainer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_naretainer","text":"","code":"fpath <- system.file(\"extdata\", \"dat_4.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale_naretainer(nocomma_dat, tnp=3, cycles=40)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus","text":"Creates data frame sample loaded microplate wells separate attribute.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus","text":"","code":"resample_dat_scale_optimus(df, tnp, cycles)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus","text":"df clean data frame attributes tuples containing mixture samples. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus","text":"new data frame separated samples assigned separate attribute column.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus","text":"function builds scales- @seealso resample_dat(), hence suffix scale. function optimized @seealso resample_dat_scale(), hence suffix scale_optimus.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale_optimus(nocomma_dat, tnp=3, cycles=40)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus_backend.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus_backend","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus_backend","text":"Creates data frame sample loaded microplate wells separate attribute.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus_backend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus_backend","text":"","code":"resample_dat_scale_optimus_backend(df, tnp, cycles, na_omit = NULL)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus_backend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus_backend","text":"df clean data frame attributes tuples containing mixture samples. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument. na_omit Takes string \"yes\" \"\".","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus_backend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus_backend","text":"new data frame separated samples assigned separate attribute column.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus_backend.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus_backend","text":"function builds scales- @seealso resample_dat(), hence suffix scale. function optimized @seealso resample_dat_scale(), hence suffix scale_optimus.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus_backend.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus_backend","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus_backend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus_backend","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale_optimus_backend(nocomma_dat, tnp=3, cycles=40)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus_na","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus_na","text":"Creates data frame sample loaded microplate wells separate attribute. NA values retained.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus_na","text":"","code":"resample_dat_scale_optimus_na(df, tnp, cycles)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus_na","text":"df clean data frame attributes tuples containing mixture samples. tnp numeric value indicating number rows used. TNP used acronym Test, Negative, Positive. cycles numeric value indicating number cycles selected user running FLUOstar instrument.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus_na","text":"new data frame separated samples assigned separate attribute column.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus_na.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus_na","text":"function builds scales- @seealso resample_dat(), hence suffix scale. function optimized @seealso resample_dat_scale(), hence suffix scale_optimus.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus_na.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus_na","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/resample_dat_scale_optimus_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to create an attribute or column for each sample loaded into the microplate wells. — resample_dat_scale_optimus_na","text":"","code":"fpath <- system.file(\"extdata\", \"dat_1.dat\", package = \"normfluodbf\", mustWork = TRUE) dat_df <- read.table(file=fpath) nocomma_dat <- clean_odddat_optimus(dat_df) resampled_scaled <- resample_dat_scale_optimus_na(nocomma_dat, tnp=3, cycles=40)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/roundfluor.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A value rounding function. — roundfluor","title":"Title: A value rounding function. — roundfluor","text":"Round attribute values three decimal places.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/roundfluor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A value rounding function. — roundfluor","text":"","code":"roundfluor(x)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/roundfluor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A value rounding function. — roundfluor","text":"x Attribute value(s).","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/roundfluor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A value rounding function. — roundfluor","text":"rounded value three decimal places applied single value attribute log-transformed values.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/roundfluor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A value rounding function. — roundfluor","text":"","code":"test_df <- as.data.frame(c(seq(40))) colnames(test_df) <- \"test\" test_df_norm <- lapply(test_df[1:ncol(test_df)], roundfluor)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/unique_identifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Title: A function to append a unique identifier attribute to any data frame within the normfluodbf package. — unique_identifier","title":"Title: A function to append a unique identifier attribute to any data frame within the normfluodbf package. — unique_identifier","text":"function context normfluodbf creates attribute called Cycle_Number appends attribute cleaned wrangled data frame derived dirty DBF file.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/unique_identifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title: A function to append a unique identifier attribute to any data frame within the normfluodbf package. — unique_identifier","text":"","code":"unique_identifier(df)"},{"path":"https://alphaprime7.github.io/normfluodbf/reference/unique_identifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title: A function to append a unique identifier attribute to any data frame within the normfluodbf package. — unique_identifier","text":"df data frame 1:n number rows.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/unique_identifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title: A function to append a unique identifier attribute to any data frame within the normfluodbf package. — unique_identifier","text":"data frame Cycle_Number attribute appended end data frame.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/unique_identifier.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Title: A function to append a unique identifier attribute to any data frame within the normfluodbf package. — unique_identifier","text":"function operates closed system, meaning primarily designed work package . use cases simply coincidence.","code":""},{"path":[]},{"path":"https://alphaprime7.github.io/normfluodbf/reference/unique_identifier.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Title: A function to append a unique identifier attribute to any data frame within the normfluodbf package. — unique_identifier","text":"Tingwei Adeck","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/reference/unique_identifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title: A function to append a unique identifier attribute to any data frame within the normfluodbf package. — unique_identifier","text":"","code":"test_df <- as.data.frame(c(seq(40))) colnames(test_df) <- \"test\" unique_identifier(test_df) #>    test Cycle_Number #> 1     1            1 #> 2     2            2 #> 3     3            3 #> 4     4            4 #> 5     5            5 #> 6     6            6 #> 7     7            7 #> 8     8            8 #> 9     9            9 #> 10   10           10 #> 11   11           11 #> 12   12           12 #> 13   13           13 #> 14   14           14 #> 15   15           15 #> 16   16           16 #> 17   17           17 #> 18   18           18 #> 19   19           19 #> 20   20           20 #> 21   21           21 #> 22   22           22 #> 23   23           23 #> 24   24           24 #> 25   25           25 #> 26   26           26 #> 27   27           27 #> 28   28           28 #> 29   29           29 #> 30   30           30 #> 31   31           31 #> 32   32           32 #> 33   33           33 #> 34   34           34 #> 35   35           35 #> 36   36           36 #> 37   37           37 #> 38   38           38 #> 39   39           39 #> 40   40           40"},{"path":"https://alphaprime7.github.io/normfluodbf/news/index.html","id":"normfluodbf-152","dir":"Changelog","previous_headings":"","what":"normfluodbf 1.5.2","title":"normfluodbf 1.5.2","text":"mature release bugs squashed release. considerations next update account machine corruption yield weird files need User control. best make updates changes programs’ dependencies occur. THANKS R community scientists part normfluodbf.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/news/index.html","id":"normfluodbf-151","dir":"Changelog","previous_headings":"","what":"normfluodbf 1.5.1","title":"normfluodbf 1.5.1","text":"CRAN release: 2023-11-20 release takes care major bug found program discovered 2 days release. issue resampling data contains single column read direction horizontal. tested program release noticed issue promptly addressed .","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/news/index.html","id":"normfluodbf-150","dir":"Changelog","previous_headings":"","what":"normfluodbf 1.5.0","title":"normfluodbf 1.5.0","text":"CRAN release: 2023-11-11 update handle DAT files.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/news/index.html","id":"normfluodbf-1439000---latest-pre-release-of-the-update","dir":"Changelog","previous_headings":"","what":"normfluodbf 1.4.3.9000 - Latest Pre-release of the Update","title":"normfluodbf 1.4.3.9000 - Latest Pre-release of the Update","text":"developmental version lot hardwork gave users option analyzing DAT files.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/news/index.html","id":"normfluodbf-143","dir":"Changelog","previous_headings":"","what":"normfluodbf 1.4.3","title":"normfluodbf 1.4.3","text":"CRAN release: 2023-08-25 final program first release program. version able handle DBF files.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/news/index.html","id":"normfluodbf-142","dir":"Changelog","previous_headings":"","what":"normfluodbf 1.4.2","title":"normfluodbf 1.4.2","text":"Pre-release version 1.4.3. Revisions CRAN led 1.4.3.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/news/index.html","id":"normfluodbf-141","dir":"Changelog","previous_headings":"","what":"normfluodbf 1.4.1","title":"normfluodbf 1.4.1","text":"Pre-release version 1.4.3. Revisions CRAN led 1.4.3.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/news/index.html","id":"normfluodbf-14","dir":"Changelog","previous_headings":"","what":"normfluodbf 1.4","title":"normfluodbf 1.4","text":"Pre-release version 1.4.3. Revisions CRAN led 1.4.3.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/news/index.html","id":"normfluodbf-13","dir":"Changelog","previous_headings":"","what":"normfluodbf 1.3","title":"normfluodbf 1.3","text":"Pre-release version 1.4.3. Revisions CRAN led 1.4.3.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/news/index.html","id":"normfluodbf-12","dir":"Changelog","previous_headings":"","what":"normfluodbf 1.2","title":"normfluodbf 1.2","text":"Pre-release version 1.4.3. Revisions CRAN led 1.4.3.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/news/index.html","id":"normfluodbf-11","dir":"Changelog","previous_headings":"","what":"normfluodbf 1.1","title":"normfluodbf 1.1","text":"Pre-release version 1.4.3. Revisions CRAN led 1.4.3.","code":""},{"path":"https://alphaprime7.github.io/normfluodbf/news/index.html","id":"normfluodbf-10","dir":"Changelog","previous_headings":"","what":"normfluodbf 1.0","title":"normfluodbf 1.0","text":"Pre-release version 1.4.3. Revisions CRAN led 1.4.3.","code":""}]
