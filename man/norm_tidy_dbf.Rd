% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/norm_tidy_dbf.R
\name{norm_tidy_dbf}
\alias{norm_tidy_dbf}
\title{Title: Cleans and Normalizes ".dbf" files obtained from experiments using the FLUOstar microplate reader.}
\usage{
norm_tidy_dbf(
  file = NULL,
  norm_scale = NULL,
  transformed = NULL,
  fun = NA,
  ...
)
}
\arguments{
\item{file}{A string ("liposomes_xxx.dbf") if the file is found within the present working directory (pwd) OR a path pointing directly to a ".dbf" file, from FLUOstar experiments.}

\item{norm_scale}{This parameter can taken in 'raw', hundred', 'one', 'z-score' or 'decimal', which denotes the normalization type; Initialized as NULL.}

\item{transformed}{This parameter can take in 'log' which denotes a logarithmic box-cox transformation; Initialized as NULL.}

\item{fun}{A variable defined as NA, used for boolean expressions or manipulation.}

\item{...}{A container object that can be used to capture extra variables if needed.}
}
\value{
A normalized data frame with an appended "Cycle_Number" attribute.
}
\description{
Input the path to a ".dbf" file obtained from the FLUOstar microplate (usually a 96-well microplate) reader; this function will create a data frame, clean the data frame, normalize the data frame, append a "Cycle_Number" column and return a data frame that is ready for analysis.
Most importantly, this function is a single_step function.
Also, the function can be extended to other ".dbf" files if they follow the format for which this function was designed; this is totally at the users' discretion.
}
\note{
Re-nomenclature of norm_tidy_dbf to a more appropriate name that facilitates function utilization. Users can continue with the old name ("norm_tidy_dbf") but this is a better name in my opinion.
The default dbf normalization technique outputs values in the 0-1 range. The user needs to specify different aesthetics if they are used to seeing their plots on a different range.
The function accounts for nine conditions and there is an active quest to find a better way to write this.
Please NOTE that decimal scaling is a sliding scale and so should yield unwanted results.
Please Note that the user must specify the norm_scale if they also want to specify log transformation(transformed argument).
Backward compatibility is maintained and so there should be no issues with using the package the way the user was used to.
The last NOTE is that if the user has no real clue how to analyze their data and just inputs a link to the dbf file, the program returns a 0-1 scale normalized data frame.
}
\examples{
fpath <- system.file("extdata", "liposomes_214.dbf", package = "normfluodbf", mustWork = TRUE)
normalized_dbf_default <- norm_tidy_dbf(file=fpath)
normalized_dbf_scale100 <- norm_tidy_dbf(file=fpath, norm_scale = 'hundred')
xvar <- c("Cycle_Number")
yvars_dbf <- c("A01","A02","A03")
color <- c("Test","Negative Control","Positive Control")
xl <- c(0,40)
yl_dbf <- c(0,100)
gg_plot_triplets(normalized_dbf_scale100,x=xvar,y_list=yvars_dbf,xlim=xl,ylim=yl_dbf)
}
