% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_utils.R
\name{plotutils}
\alias{plotutils}
\alias{reverse_row}
\alias{row_levels_layout}
\alias{row_levels_grid}
\alias{column_levels}
\alias{column_levels_layout}
\alias{column_levels_grid}
\alias{row_levels}
\alias{reset_grid}
\alias{get_x_var}
\alias{get_y_var}
\alias{convert_x_one_label}
\alias{convert_x_two_label}
\alias{get_x_label}
\alias{add_custom_legend}
\alias{remove_legend}
\alias{plot_canvas}
\alias{plot_grid}
\alias{plot_in_well}
\alias{plot.fluorstar}
\alias{plot_superimpose}
\alias{plot_plate_layout}
\alias{plot_side_by_side}
\alias{save_plot}
\title{Adeckstats Plots}
\usage{
reverse_row(vect)

row_levels_layout(plate)

row_levels_grid(rows)

column_levels(plate)

column_levels_layout(plate)

column_levels_grid(cols)

row_levels(plate)

reset_grid(plate, grid_plot)

get_x_var(data)

get_y_var(data)

convert_x_one_label(xlabel)

convert_x_two_label(xlabel)

get_x_label(xvar)

add_custom_legend(df, legend_values)

remove_legend(plate)

plot_canvas(
  plate,
  whichxvar = NULL,
  Cycle_Number = 2 \%in\% whichxvar,
  Time = 1 \%in\% whichxvar
)

plot_grid(data, plt.obj)

plot_in_well(
  plt.obj,
  data,
  whichxvar = NULL,
  Cycle_Number = 2 \%in\% whichxvar,
  Time = 1 \%in\% whichxvar,
  no_annotations = FALSE
)

\method{plot}{fluorstar}(data, plt.obj, whichxvar = NULL)

plot_superimpose(
  data,
  plt.obj,
  whichxvar = NULL,
  Cycle_Number = 2 \%in\% whichxvar,
  Time = 1 \%in\% whichxvar,
  xlab = NULL,
  ylab = NULL,
  title = NULL,
  legend_labels = NULL,
  whichpalette = NULL,
  whichlinetype = NULL,
  linetypeoptions = c("solid", "dashed", "dotted"),
  solid = linetypeoptions[which(linetypeoptions == "solid")],
  dashed = linetypeoptions[which(linetypeoptions == "dashed")],
  dotted = linetypeoptions[which(linetypeoptions == "dotted")],
  linetype = solid,
  wespalettes = c(names(wesanderson::wes_palettes)),
  Zissou1 = wespalettes[which(wespalettes == "Zissou1")],
  Cavalcanti1 = wespalettes[which(wespalettes == "Cavalcanti1")],
  BottleRocket1 = wespalettes[which(wespalettes == "BottleRocket1")],
  BottleRocket2 = wespalettes[which(wespalettes == "BottleRocket2")],
  Rushmore1 = wespalettes[which(wespalettes == "Rushmore1")],
  Darjeeling1 = wespalettes[which(wespalettes == "Darjeeling1")],
  Royal1 = wespalettes[which(wespalettes == "Royal1")],
  Royal2 = wespalettes[which(wespalettes == "Royal2")],
  Moonrise1 = wespalettes[which(wespalettes == "Moonrise1")],
  GrandBudapest1 = wespalettes[which(wespalettes == "GrandBudapest1")],
  Moonrise2 = wespalettes[which(wespalettes == "Moonrise2")],
  GrandBudapest2 = wespalettes[which(wespalettes == "GrandBudapest2")],
  IsleofDogs1 = wespalettes[which(wespalettes == "IsleofDogs1")],
  IsleofDogs2 = wespalettes[which(wespalettes == "IsleofDogs2")],
  FrenchDispatch = wespalettes[which(wespalettes == "FrenchDispatch")],
  AsteroidCity1 = wespalettes[which(wespalettes == "AsteroidCity1")],
  AsteroidCity2 = wespalettes[which(wespalettes == "AsteroidCity2")],
  pal = Zissou1
)

plot_plate_layout(plate)

plot_side_by_side(
  data,
  plt.obj,
  xlab = NULL,
  ylab = NULL,
  xlim = NULL,
  ylim = NULL,
  title = NULL,
  whichxvar = NULL,
  whichpalette = NULL,
  whichlinetype = NULL,
  legend_labels = NULL
)

save_plot(name)
}
\value{
plot utils

plot utils

plot utils

plot utils

plot utils

plot utils

plot utils

plot utils

plot utils

plot utils

plot utils

plot utils

plot utils

plot utils

plot utils

plot utils

ggplot list

ggplot list

ggplot list

ggplot list

ggplot list

ggplot list

ggplot list

plot utils
}
\description{
Adeckstats Plots
}
\note{
Just one of those functions I have found no use for

follows the grid plot

purely subordinate because of the plt.obj found in the plot function
}
\examples{
\dontrun{
reverse_row(vect = vector)
column_levels(plate = plate)
row_levels(plate = plate)
base_plot(plate = plate)
save_plot(name = 'beefjerky')}
}
\concept{plotutils}
\keyword{internal}
